// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 SJ Web Edition"

// DATE "10/06/2015 12:24:46"

module 	endpoint_registers (
	CLK,
	RST_N,
	ENDPOINT_DECODE,
	DATA_BYTE_READY,
	ENDPOINT_EN,
	ENDPOINT_BUSY,
	FT_245_SM_BUSY,
	WRITE_EN,
	WRITE_READY,
	WRITE_BYTE,
	WRITE_COMPLETE,
	UC_IN,
	UC_OUT);
input 	CLK;
input 	RST_N;
input 	[7:0] ENDPOINT_DECODE;
input 	DATA_BYTE_READY;
output 	ENDPOINT_EN;
output 	ENDPOINT_BUSY;
input 	FT_245_SM_BUSY;
output 	WRITE_EN;
input 	WRITE_READY;
output 	[7:0] WRITE_BYTE;
input 	WRITE_COMPLETE;
output 	[23:0] UC_IN;
input 	[21:0] UC_OUT;
wire \uc_in_payload[0] ;
wire \uc_in_payload[1] ;
wire \uc_in_payload[2] ;
wire \uc_in_payload[3] ;
wire \uc_in_payload[4] ;
wire \uc_in_payload[5] ;
wire \uc_in_payload[6] ;
wire \uc_in_payload[7] ;
wire \uc_in_address[0] ;
wire \uc_in_address[1] ;
wire \uc_in_address[2] ;
wire \uc_in_length[0] ;
wire \uc_in_length[1] ;
wire \uc_in_length[2] ;
wire \uc_in_length[3] ;
wire \uc_in_length[4] ;
wire \uc_in_length[5] ;
wire \uc_in_length[6] ;
wire \uc_in_length[7] ;
wire \uc_in_command[2] ;
wire \LessThan7~5 ;
wire \LessThan2~5 ;
wire \LessThan7~10 ;
wire \LessThan2~10 ;
wire \LessThan7~15 ;
wire \LessThan2~15 ;
wire \LessThan7~20 ;
wire \LessThan2~20 ;
wire \LessThan7~25 ;
wire \LessThan2~25 ;
wire \LessThan7~30 ;
wire \LessThan2~30 ;
wire \LessThan7~35 ;
wire \Add1~30 ;
wire \LessThan2~35 ;
wire \command_byte~0 ;
wire \write_to_host~0 ;
wire \always0~0 ;
wire write_to_host_delay;
wire \LessThan1~0 ;
wire \write_to_host~1 ;
wire write_to_host;
wire \next[6]~14 ;
wire \state[6] ;
wire \state[7] ;
wire \state[8] ;
wire write_control_mux_reg;
wire \always3~0 ;
wire \write_control_mux[6]~16 ;
wire \write_control_mux[0] ;
wire \write_control_mux[0]~3 ;
wire \write_control_mux[0]~3COUT1_18 ;
wire \write_control_mux[1] ;
wire \write_control_mux[1]~1 ;
wire \write_control_mux[1]~1COUT1_19 ;
wire \write_control_mux[2] ;
wire \write_control_mux[2]~5 ;
wire \write_control_mux[2]~5COUT1_20 ;
wire \write_control_mux[3] ;
wire \write_control_mux[3]~7 ;
wire \write_control_mux[3]~7COUT1_21 ;
wire \write_control_mux[4] ;
wire \write_control_mux[4]~9 ;
wire \write_control_mux[5] ;
wire \write_control_mux[5]~11 ;
wire \write_control_mux[5]~11COUT1_22 ;
wire \write_control_mux[6] ;
wire \write_control_mux[6]~13 ;
wire \write_control_mux[6]~13COUT1_23 ;
wire \write_control_mux[7] ;
wire \Selector8~0 ;
wire \Selector8~1 ;
wire \length_from_device[7] ;
wire \Add1~32 ;
wire \Add1~32COUT1_36 ;
wire \Add1~27 ;
wire \Add1~27COUT1_37 ;
wire \Add1~22 ;
wire \Add1~22COUT1_38 ;
wire \Add1~17 ;
wire \Add1~12 ;
wire \Add1~12COUT1_39 ;
wire \Add1~7 ;
wire \Add1~7COUT1_40 ;
wire \Add1~0 ;
wire \Add1~15 ;
wire \length_from_device[4] ;
wire \Add1~20 ;
wire \length_from_device[3] ;
wire \Add1~25 ;
wire \length_from_device[2] ;
wire \length_from_device[1] ;
wire \length_from_device[0] ;
wire \LessThan2~37 ;
wire \LessThan2~37COUT1_41 ;
wire \LessThan2~32 ;
wire \LessThan2~32COUT1_42 ;
wire \LessThan2~27 ;
wire \LessThan2~27COUT1_43 ;
wire \LessThan2~22 ;
wire \LessThan2~22COUT1_44 ;
wire \LessThan2~17 ;
wire \Add1~5 ;
wire \length_from_device[6] ;
wire \Add1~10 ;
wire \length_from_device[5] ;
wire \LessThan2~12 ;
wire \LessThan2~12COUT1_45 ;
wire \LessThan2~7 ;
wire \LessThan2~7COUT1_46 ;
wire \LessThan2~0 ;
wire \command_from_device[1] ;
wire \command_from_device[0] ;
wire \WRITE_BYTE[5]~0 ;
wire \Selector8~2 ;
wire write_data_byte;
wire \UC_IN~22 ;
wire \command_from_device[2] ;
wire \WideOr2~0 ;
wire \next[0]~9 ;
wire \Add3~34 ;
wire \Add3~34COUT1_43 ;
wire \Add3~39 ;
wire \Add3~39COUT1_44 ;
wire \Add3~27 ;
wire \byte_count[2] ;
wire \Add3~29 ;
wire \Add3~29COUT1_45 ;
wire \Add3~22 ;
wire \byte_count[3] ;
wire \Add3~24 ;
wire \Add3~24COUT1_46 ;
wire \Add3~17 ;
wire \byte_count[4] ;
wire \Add3~19 ;
wire \Add3~12 ;
wire \byte_count[5] ;
wire \Add3~14 ;
wire \Add3~14COUT1_47 ;
wire \Add3~7 ;
wire \byte_count[6] ;
wire \Equal6~0 ;
wire \LessThan5~0 ;
wire \next~3 ;
wire \byte_count_reg~0 ;
wire byte_count_reg;
wire \state[2] ;
wire \control_multiplexor[5] ;
wire \control_multiplexor[4] ;
wire \control_multiplexor[3] ;
wire \Decoder1~0 ;
wire \data_byte_ready_delay_cnt[0] ;
wire \data_byte_ready_delay_cnt[0]~0 ;
wire \data_byte_ready_delay_cnt[1] ;
wire \data_byte_ready_delay_cnt[2] ;
wire \next[4]~6 ;
wire \state[4] ;
wire \always7~2 ;
wire \byte_count[0]~12 ;
wire \Add3~32 ;
wire \byte_count[0] ;
wire \Equal6~1 ;
wire \Equal6~2 ;
wire \block_read_byte~0 ;
wire \uc_in_length[0]~1 ;
wire block_read_byte;
wire \Add3~37 ;
wire \byte_count[1]~13 ;
wire \byte_count[1] ;
wire \LessThan4~0 ;
wire \Add3~5 ;
wire \always7~1 ;
wire \Add3~6 ;
wire \Add3~9 ;
wire \Add3~9COUT1_48 ;
wire \Add3~0 ;
wire \byte_count[7] ;
wire \length_to_device[7]~0 ;
wire \length_to_device[7] ;
wire \length_to_device[4] ;
wire \length_to_device[3] ;
wire \length_to_device[2] ;
wire \length_to_device[1] ;
wire \length_to_device[0] ;
wire \Add5~37 ;
wire \Add5~37COUT1_41 ;
wire \Add5~32 ;
wire \Add5~32COUT1_42 ;
wire \Add5~27 ;
wire \Add5~27COUT1_43 ;
wire \Add5~22 ;
wire \Add5~22COUT1_44 ;
wire \Add5~17 ;
wire \length_to_device[6] ;
wire \length_to_device[5] ;
wire \Add5~12 ;
wire \Add5~12COUT1_45 ;
wire \Add5~7 ;
wire \Add5~7COUT1_46 ;
wire \Add5~0 ;
wire \Add5~15 ;
wire \Add5~20 ;
wire \Add5~25 ;
wire \Add5~30 ;
wire \Add5~35 ;
wire \LessThan7~37 ;
wire \LessThan7~37COUT1_41 ;
wire \LessThan7~32 ;
wire \LessThan7~32COUT1_42 ;
wire \LessThan7~27 ;
wire \LessThan7~27COUT1_43 ;
wire \LessThan7~22 ;
wire \LessThan7~22COUT1_44 ;
wire \LessThan7~17 ;
wire \Add5~5 ;
wire \Add5~10 ;
wire \LessThan7~12 ;
wire \LessThan7~12COUT1_45 ;
wire \LessThan7~7 ;
wire \LessThan7~7COUT1_46 ;
wire \LessThan7~0 ;
wire \next[0]~10 ;
wire \next[0]~11 ;
wire \next[0]~12 ;
wire \state[0] ;
wire \state[1] ;
wire \always7~0 ;
wire \next[3]~1 ;
wire \next~0 ;
wire \state[3] ;
wire \ENDPOINT_EN~0 ;
wire transfer_busy;
wire \ENDPOINT_BUSY~0 ;
wire \WRITE_EN~reg0 ;
wire \address_from_device[0] ;
wire \payload_from_device[0] ;
wire \WRITE_BYTE[5]~1 ;
wire \WRITE_BYTE[0]~reg0 ;
wire \address_from_device[1] ;
wire \payload_from_device[1] ;
wire \WRITE_BYTE[1]~reg0 ;
wire \address_from_device[2] ;
wire \payload_from_device[2] ;
wire \WRITE_BYTE[2]~reg0 ;
wire \payload_from_device[3] ;
wire \WRITE_BYTE[3]~reg0 ;
wire \payload_from_device[4] ;
wire \WRITE_BYTE[4]~reg0 ;
wire \payload_from_device[5] ;
wire \WRITE_BYTE[5]~reg0 ;
wire \payload_from_device[6] ;
wire \WRITE_BYTE[6]~reg0 ;
wire \payload_from_device[7] ;
wire \WRITE_BYTE[7]~reg0 ;
wire reset_uc_in_reg;
wire \reset_uc_in_counter[0] ;
wire \reset_uc_in_counter[1] ;
wire reset_uc_in;
wire \uc_in_payload[0]~0 ;
wire \uc_in_payload[0]~1 ;
wire \UC_IN~0 ;
wire \UC_IN~1 ;
wire \UC_IN~2 ;
wire \UC_IN~3 ;
wire \UC_IN~4 ;
wire \UC_IN~5 ;
wire \UC_IN~6 ;
wire \UC_IN~7 ;
wire \control_multiplexor[0] ;
wire \uc_in_address[0]~0 ;
wire \UC_IN~8 ;
wire \control_multiplexor[1] ;
wire \UC_IN~9 ;
wire \control_multiplexor[2] ;
wire \UC_IN~10 ;
wire \uc_in_length~0 ;
wire \UC_IN~11 ;
wire \uc_in_length~2 ;
wire \UC_IN~12 ;
wire \uc_in_length~3 ;
wire \UC_IN~13 ;
wire \uc_in_length~4 ;
wire \UC_IN~14 ;
wire \uc_in_length~5 ;
wire \UC_IN~15 ;
wire \uc_in_length~6 ;
wire \UC_IN~16 ;
wire \uc_in_length~7 ;
wire \UC_IN~17 ;
wire \uc_in_length~8 ;
wire \UC_IN~18 ;
wire \uc_in_command[0]~0 ;
wire \uc_in_command[0] ;
wire \UC_IN~19 ;
wire \uc_in_command[1] ;
wire \UC_IN~20 ;
wire \UC_IN~21 ;
wire \UC_IN~23 ;
wire \UC_IN~24 ;
wire [7:0] control_multiplexor;
wire [8:0] state;
wire [7:0] uc_in_payload;
wire [2:0] data_byte_ready_delay_cnt;
wire [2:0] uc_in_address;
wire [7:0] uc_in_length;
wire [2:0] uc_in_command;
wire [2:0] command_from_device;
wire [7:0] byte_count;
wire [2:0] address_from_device;
wire [7:0] length_from_device;
wire [7:0] payload_from_device;
wire [7:0] write_control_mux;
wire [3:0] reset_uc_in_counter;
wire [7:0] length_to_device;

wire __ALT_INV__RST_N;
wire \__ALT_INV__state[3] ;

wire gnd;
wire vcc;

assign gnd = 1'b0;
assign vcc = 1'b1;

assign __ALT_INV__RST_N = ~ RST_N;
assign \__ALT_INV__state[3]  = ~ \state[3] ;

maxv_lcell \command_byte~0_I (
	.dataa(ENDPOINT_DECODE[6]),
	.datac(ENDPOINT_DECODE[7]),
	.combout(\command_byte~0 ));
defparam \command_byte~0_I .operation_mode = "normal";
defparam \command_byte~0_I .synch_mode = "off";
defparam \command_byte~0_I .register_cascade_mode = "off";
defparam \command_byte~0_I .sum_lutc_input = "datac";
defparam \command_byte~0_I .lut_mask = "5050";
defparam \command_byte~0_I .output_mode = "comb_only";

maxv_lcell \write_to_host~0_I (
	.dataa(UC_OUT[21]),
	.datab(write_to_host),
	.datac(UC_OUT[20]),
	.datad(UC_OUT[19]),
	.combout(\write_to_host~0 ));
defparam \write_to_host~0_I .operation_mode = "normal";
defparam \write_to_host~0_I .synch_mode = "off";
defparam \write_to_host~0_I .register_cascade_mode = "off";
defparam \write_to_host~0_I .sum_lutc_input = "datac";
defparam \write_to_host~0_I .lut_mask = "3312";
defparam \write_to_host~0_I .output_mode = "comb_only";

maxv_lcell \always0~0_I (
	.dataa(UC_OUT[21]),
	.datab(write_to_host),
	.datac(UC_OUT[20]),
	.datad(UC_OUT[19]),
	.combout(\always0~0 ));
defparam \always0~0_I .operation_mode = "normal";
defparam \always0~0_I .synch_mode = "off";
defparam \always0~0_I .register_cascade_mode = "off";
defparam \always0~0_I .sum_lutc_input = "datac";
defparam \always0~0_I .lut_mask = "3332";
defparam \always0~0_I .output_mode = "comb_only";

maxv_lcell \write_to_host_delay~I (
	.clk(CLK),
	.dataa(FT_245_SM_BUSY),
	.datab(\write_to_host~0 ),
	.datac(\always0~0 ),
	.datad(write_to_host_delay),
	.aclr(__ALT_INV__RST_N),
	.regout(write_to_host_delay));
defparam \write_to_host_delay~I .operation_mode = "normal";
defparam \write_to_host_delay~I .synch_mode = "off";
defparam \write_to_host_delay~I .register_cascade_mode = "off";
defparam \write_to_host_delay~I .sum_lutc_input = "datac";
defparam \write_to_host_delay~I .lut_mask = "FA88";
defparam \write_to_host_delay~I .output_mode = "reg_only";

maxv_lcell \LessThan1~0_I (
	.dataa(UC_OUT[21]),
	.datab(UC_OUT[19]),
	.datac(UC_OUT[20]),
	.combout(\LessThan1~0 ));
defparam \LessThan1~0_I .operation_mode = "normal";
defparam \LessThan1~0_I .synch_mode = "off";
defparam \LessThan1~0_I .register_cascade_mode = "off";
defparam \LessThan1~0_I .sum_lutc_input = "datac";
defparam \LessThan1~0_I .lut_mask = "FEFE";
defparam \LessThan1~0_I .output_mode = "comb_only";

maxv_lcell \write_to_host~1_I (
	.dataa(FT_245_SM_BUSY),
	.datab(write_to_host_delay),
	.datac(\LessThan1~0 ),
	.datad(\write_to_host~0 ),
	.combout(\write_to_host~1 ));
defparam \write_to_host~1_I .operation_mode = "normal";
defparam \write_to_host~1_I .synch_mode = "off";
defparam \write_to_host~1_I .register_cascade_mode = "off";
defparam \write_to_host~1_I .sum_lutc_input = "datac";
defparam \write_to_host~1_I .lut_mask = "5504";
defparam \write_to_host~1_I .output_mode = "comb_only";

maxv_lcell \write_to_host~I (
	.clk(CLK),
	.dataa(write_to_host),
	.datab(\state[8] ),
	.datac(\write_to_host~1 ),
	.datad(write_to_host_delay),
	.aclr(__ALT_INV__RST_N),
	.regout(write_to_host));
defparam \write_to_host~I .operation_mode = "normal";
defparam \write_to_host~I .synch_mode = "off";
defparam \write_to_host~I .register_cascade_mode = "off";
defparam \write_to_host~I .sum_lutc_input = "datac";
defparam \write_to_host~I .lut_mask = "FAF2";
defparam \write_to_host~I .output_mode = "reg_only";

maxv_lcell \next[6]~14_I (
	.dataa(WRITE_READY),
	.datab(\state[6] ),
	.datac(\WideOr2~0 ),
	.datad(\UC_IN~22 ),
	.combout(\next[6]~14 ));
defparam \next[6]~14_I .operation_mode = "normal";
defparam \next[6]~14_I .synch_mode = "off";
defparam \next[6]~14_I .register_cascade_mode = "off";
defparam \next[6]~14_I .sum_lutc_input = "datac";
defparam \next[6]~14_I .lut_mask = "F444";
defparam \next[6]~14_I .output_mode = "comb_only";

maxv_lcell \state[6]~I (
	.clk(CLK),
	.dataa(write_to_host),
	.datab(\next[6]~14 ),
	.datac(\state[0] ),
	.datad(DATA_BYTE_READY),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[6] ));
defparam \state[6]~I .operation_mode = "normal";
defparam \state[6]~I .synch_mode = "off";
defparam \state[6]~I .register_cascade_mode = "off";
defparam \state[6]~I .sum_lutc_input = "datac";
defparam \state[6]~I .lut_mask = "CCCE";
defparam \state[6]~I .output_mode = "reg_only";

maxv_lcell \state[7]~I (
	.clk(CLK),
	.dataa(WRITE_READY),
	.datab(\state[6] ),
	.datac(WRITE_COMPLETE),
	.datad(\state[7] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[7] ));
defparam \state[7]~I .operation_mode = "normal";
defparam \state[7]~I .synch_mode = "off";
defparam \state[7]~I .register_cascade_mode = "off";
defparam \state[7]~I .sum_lutc_input = "datac";
defparam \state[7]~I .lut_mask = "8F88";
defparam \state[7]~I .output_mode = "reg_only";

maxv_lcell \state[8]~I (
	.clk(CLK),
	.datab(WRITE_COMPLETE),
	.datac(\state[7] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[8] ));
defparam \state[8]~I .operation_mode = "normal";
defparam \state[8]~I .synch_mode = "off";
defparam \state[8]~I .register_cascade_mode = "off";
defparam \state[8]~I .sum_lutc_input = "datac";
defparam \state[8]~I .lut_mask = "C0C0";
defparam \state[8]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux_reg~I (
	.clk(CLK),
	.dataa(\state[8] ),
	.datab(write_control_mux_reg),
	.datac(\state[0] ),
	.datad(\state[6] ),
	.aclr(__ALT_INV__RST_N),
	.regout(write_control_mux_reg));
defparam \write_control_mux_reg~I .operation_mode = "normal";
defparam \write_control_mux_reg~I .synch_mode = "off";
defparam \write_control_mux_reg~I .register_cascade_mode = "off";
defparam \write_control_mux_reg~I .sum_lutc_input = "datac";
defparam \write_control_mux_reg~I .lut_mask = "7340";
defparam \write_control_mux_reg~I .output_mode = "reg_only";

maxv_lcell \always3~0_I (
	.datac(write_control_mux_reg),
	.datad(\state[6] ),
	.combout(\always3~0 ));
defparam \always3~0_I .operation_mode = "normal";
defparam \always3~0_I .synch_mode = "off";
defparam \always3~0_I .register_cascade_mode = "off";
defparam \always3~0_I .sum_lutc_input = "datac";
defparam \always3~0_I .lut_mask = "F0FF";
defparam \always3~0_I .output_mode = "comb_only";

maxv_lcell \write_control_mux[6]~16_I (
	.dataa(\state[8] ),
	.datab(write_control_mux_reg),
	.datac(\state[0] ),
	.datad(\state[6] ),
	.combout(\write_control_mux[6]~16 ));
defparam \write_control_mux[6]~16_I .operation_mode = "normal";
defparam \write_control_mux[6]~16_I .synch_mode = "off";
defparam \write_control_mux[6]~16_I .register_cascade_mode = "off";
defparam \write_control_mux[6]~16_I .sum_lutc_input = "datac";
defparam \write_control_mux[6]~16_I .lut_mask = "3707";
defparam \write_control_mux[6]~16_I .output_mode = "comb_only";

maxv_lcell \write_control_mux[0]~I (
	.clk(CLK),
	.datab(\write_control_mux[0] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.regout(\write_control_mux[0] ),
	.cout(\write_control_mux[0]~3 ));
defparam \write_control_mux[0]~I .operation_mode = "arithmetic";
defparam \write_control_mux[0]~I .synch_mode = "on";
defparam \write_control_mux[0]~I .register_cascade_mode = "off";
defparam \write_control_mux[0]~I .sum_lutc_input = "datac";
defparam \write_control_mux[0]~I .lut_mask = "33CC";
defparam \write_control_mux[0]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux[1]~I (
	.clk(CLK),
	.datab(\write_control_mux[1] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.cin(\write_control_mux[0]~3 ),
	.regout(\write_control_mux[1] ),
	.cout(\write_control_mux[1]~1 ));
defparam \write_control_mux[1]~I .operation_mode = "arithmetic";
defparam \write_control_mux[1]~I .synch_mode = "on";
defparam \write_control_mux[1]~I .register_cascade_mode = "off";
defparam \write_control_mux[1]~I .sum_lutc_input = "cin";
defparam \write_control_mux[1]~I .lut_mask = "3C3F";
defparam \write_control_mux[1]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux[2]~I (
	.clk(CLK),
	.datab(\write_control_mux[2] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.cin(\write_control_mux[1]~1 ),
	.regout(\write_control_mux[2] ),
	.cout(\write_control_mux[2]~5 ));
defparam \write_control_mux[2]~I .operation_mode = "arithmetic";
defparam \write_control_mux[2]~I .synch_mode = "on";
defparam \write_control_mux[2]~I .register_cascade_mode = "off";
defparam \write_control_mux[2]~I .sum_lutc_input = "cin";
defparam \write_control_mux[2]~I .lut_mask = "C30C";
defparam \write_control_mux[2]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux[3]~I (
	.clk(CLK),
	.dataa(\write_control_mux[3] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.cin(\write_control_mux[2]~5 ),
	.regout(\write_control_mux[3] ),
	.cout(\write_control_mux[3]~7 ));
defparam \write_control_mux[3]~I .operation_mode = "arithmetic";
defparam \write_control_mux[3]~I .synch_mode = "on";
defparam \write_control_mux[3]~I .register_cascade_mode = "off";
defparam \write_control_mux[3]~I .sum_lutc_input = "cin";
defparam \write_control_mux[3]~I .lut_mask = "5A5F";
defparam \write_control_mux[3]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux[4]~I (
	.clk(CLK),
	.dataa(\write_control_mux[4] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.cin(\write_control_mux[3]~7 ),
	.regout(\write_control_mux[4] ),
	.cout(\write_control_mux[4]~9 ));
defparam \write_control_mux[4]~I .operation_mode = "arithmetic";
defparam \write_control_mux[4]~I .synch_mode = "on";
defparam \write_control_mux[4]~I .register_cascade_mode = "off";
defparam \write_control_mux[4]~I .sum_lutc_input = "cin";
defparam \write_control_mux[4]~I .lut_mask = "A50A";
defparam \write_control_mux[4]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux[5]~I (
	.clk(CLK),
	.dataa(\write_control_mux[5] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.cin(\write_control_mux[4]~9 ),
	.regout(\write_control_mux[5] ),
	.cout(\write_control_mux[5]~11 ));
defparam \write_control_mux[5]~I .operation_mode = "arithmetic";
defparam \write_control_mux[5]~I .synch_mode = "on";
defparam \write_control_mux[5]~I .register_cascade_mode = "off";
defparam \write_control_mux[5]~I .sum_lutc_input = "cin";
defparam \write_control_mux[5]~I .lut_mask = "5A5F";
defparam \write_control_mux[5]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux[6]~I (
	.clk(CLK),
	.dataa(\write_control_mux[6] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.cin(\write_control_mux[5]~11 ),
	.regout(\write_control_mux[6] ),
	.cout(\write_control_mux[6]~13 ));
defparam \write_control_mux[6]~I .operation_mode = "arithmetic";
defparam \write_control_mux[6]~I .synch_mode = "on";
defparam \write_control_mux[6]~I .register_cascade_mode = "off";
defparam \write_control_mux[6]~I .sum_lutc_input = "cin";
defparam \write_control_mux[6]~I .lut_mask = "A50A";
defparam \write_control_mux[6]~I .output_mode = "reg_only";

maxv_lcell \write_control_mux[7]~I (
	.clk(CLK),
	.datab(\write_control_mux[7] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\always3~0 ),
	.ena(\write_control_mux[6]~16 ),
	.cin(\write_control_mux[6]~13 ),
	.regout(\write_control_mux[7] ));
defparam \write_control_mux[7]~I .operation_mode = "normal";
defparam \write_control_mux[7]~I .synch_mode = "on";
defparam \write_control_mux[7]~I .register_cascade_mode = "off";
defparam \write_control_mux[7]~I .sum_lutc_input = "cin";
defparam \write_control_mux[7]~I .lut_mask = "3C3C";
defparam \write_control_mux[7]~I .output_mode = "reg_only";

maxv_lcell \Selector8~0_I (
	.dataa(\write_control_mux[4] ),
	.datab(\write_control_mux[2] ),
	.datac(\write_control_mux[5] ),
	.datad(\write_control_mux[3] ),
	.combout(\Selector8~0 ));
defparam \Selector8~0_I .operation_mode = "normal";
defparam \Selector8~0_I .synch_mode = "off";
defparam \Selector8~0_I .register_cascade_mode = "off";
defparam \Selector8~0_I .sum_lutc_input = "datac";
defparam \Selector8~0_I .lut_mask = "0001";
defparam \Selector8~0_I .output_mode = "comb_only";

maxv_lcell \Selector8~1_I (
	.dataa(\write_control_mux[6] ),
	.datac(\write_control_mux[7] ),
	.datad(\Selector8~0 ),
	.combout(\Selector8~1 ));
defparam \Selector8~1_I .operation_mode = "normal";
defparam \Selector8~1_I .synch_mode = "off";
defparam \Selector8~1_I .register_cascade_mode = "off";
defparam \Selector8~1_I .sum_lutc_input = "datac";
defparam \Selector8~1_I .lut_mask = "0500";
defparam \Selector8~1_I .output_mode = "comb_only";

maxv_lcell \length_from_device[7]~I (
	.clk(CLK),
	.dataa(UC_OUT[18]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[7] ));
defparam \length_from_device[7]~I .operation_mode = "normal";
defparam \length_from_device[7]~I .synch_mode = "off";
defparam \length_from_device[7]~I .register_cascade_mode = "off";
defparam \length_from_device[7]~I .sum_lutc_input = "datac";
defparam \length_from_device[7]~I .lut_mask = "AAAA";
defparam \length_from_device[7]~I .output_mode = "reg_only";

maxv_lcell \Add1~32_I (
	.datab(\write_control_mux[1] ),
	.combout(\Add1~30 ),
	.cout(\Add1~32 ));
defparam \Add1~32_I .operation_mode = "arithmetic";
defparam \Add1~32_I .synch_mode = "off";
defparam \Add1~32_I .register_cascade_mode = "off";
defparam \Add1~32_I .sum_lutc_input = "datac";
defparam \Add1~32_I .lut_mask = "FFCC";
defparam \Add1~32_I .output_mode = "none";

maxv_lcell \Add1~25_I (
	.dataa(\write_control_mux[2] ),
	.cin(\Add1~32 ),
	.combout(\Add1~25 ),
	.cout(\Add1~27 ));
defparam \Add1~25_I .operation_mode = "arithmetic";
defparam \Add1~25_I .synch_mode = "off";
defparam \Add1~25_I .register_cascade_mode = "off";
defparam \Add1~25_I .sum_lutc_input = "cin";
defparam \Add1~25_I .lut_mask = "A505";
defparam \Add1~25_I .output_mode = "comb_only";

maxv_lcell \Add1~20_I (
	.datab(\write_control_mux[3] ),
	.cin(\Add1~27 ),
	.combout(\Add1~20 ),
	.cout(\Add1~22 ));
defparam \Add1~20_I .operation_mode = "arithmetic";
defparam \Add1~20_I .synch_mode = "off";
defparam \Add1~20_I .register_cascade_mode = "off";
defparam \Add1~20_I .sum_lutc_input = "cin";
defparam \Add1~20_I .lut_mask = "3CCF";
defparam \Add1~20_I .output_mode = "comb_only";

maxv_lcell \Add1~15_I (
	.datab(\write_control_mux[4] ),
	.cin(\Add1~22 ),
	.combout(\Add1~15 ),
	.cout(\Add1~17 ));
defparam \Add1~15_I .operation_mode = "arithmetic";
defparam \Add1~15_I .synch_mode = "off";
defparam \Add1~15_I .register_cascade_mode = "off";
defparam \Add1~15_I .sum_lutc_input = "cin";
defparam \Add1~15_I .lut_mask = "C303";
defparam \Add1~15_I .output_mode = "comb_only";

maxv_lcell \Add1~10_I (
	.datab(\write_control_mux[5] ),
	.cin(\Add1~17 ),
	.combout(\Add1~10 ),
	.cout(\Add1~12 ));
defparam \Add1~10_I .operation_mode = "arithmetic";
defparam \Add1~10_I .synch_mode = "off";
defparam \Add1~10_I .register_cascade_mode = "off";
defparam \Add1~10_I .sum_lutc_input = "cin";
defparam \Add1~10_I .lut_mask = "3CCF";
defparam \Add1~10_I .output_mode = "comb_only";

maxv_lcell \Add1~5_I (
	.datab(\write_control_mux[6] ),
	.cin(\Add1~12 ),
	.combout(\Add1~5 ),
	.cout(\Add1~7 ));
defparam \Add1~5_I .operation_mode = "arithmetic";
defparam \Add1~5_I .synch_mode = "off";
defparam \Add1~5_I .register_cascade_mode = "off";
defparam \Add1~5_I .sum_lutc_input = "cin";
defparam \Add1~5_I .lut_mask = "C303";
defparam \Add1~5_I .output_mode = "comb_only";

maxv_lcell \Add1~0_I (
	.datad(\write_control_mux[7] ),
	.cin(\Add1~7 ),
	.combout(\Add1~0 ));
defparam \Add1~0_I .operation_mode = "normal";
defparam \Add1~0_I .synch_mode = "off";
defparam \Add1~0_I .register_cascade_mode = "off";
defparam \Add1~0_I .sum_lutc_input = "cin";
defparam \Add1~0_I .lut_mask = "0FF0";
defparam \Add1~0_I .output_mode = "comb_only";

maxv_lcell \length_from_device[4]~I (
	.clk(CLK),
	.dataa(UC_OUT[15]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[4] ));
defparam \length_from_device[4]~I .operation_mode = "normal";
defparam \length_from_device[4]~I .synch_mode = "off";
defparam \length_from_device[4]~I .register_cascade_mode = "off";
defparam \length_from_device[4]~I .sum_lutc_input = "datac";
defparam \length_from_device[4]~I .lut_mask = "AAAA";
defparam \length_from_device[4]~I .output_mode = "reg_only";

maxv_lcell \length_from_device[3]~I (
	.clk(CLK),
	.datac(UC_OUT[14]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[3] ));
defparam \length_from_device[3]~I .operation_mode = "normal";
defparam \length_from_device[3]~I .synch_mode = "off";
defparam \length_from_device[3]~I .register_cascade_mode = "off";
defparam \length_from_device[3]~I .sum_lutc_input = "datac";
defparam \length_from_device[3]~I .lut_mask = "F0F0";
defparam \length_from_device[3]~I .output_mode = "reg_only";

maxv_lcell \length_from_device[2]~I (
	.clk(CLK),
	.datab(UC_OUT[13]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[2] ));
defparam \length_from_device[2]~I .operation_mode = "normal";
defparam \length_from_device[2]~I .synch_mode = "off";
defparam \length_from_device[2]~I .register_cascade_mode = "off";
defparam \length_from_device[2]~I .sum_lutc_input = "datac";
defparam \length_from_device[2]~I .lut_mask = "CCCC";
defparam \length_from_device[2]~I .output_mode = "reg_only";

maxv_lcell \length_from_device[1]~I (
	.clk(CLK),
	.datab(UC_OUT[12]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[1] ));
defparam \length_from_device[1]~I .operation_mode = "normal";
defparam \length_from_device[1]~I .synch_mode = "off";
defparam \length_from_device[1]~I .register_cascade_mode = "off";
defparam \length_from_device[1]~I .sum_lutc_input = "datac";
defparam \length_from_device[1]~I .lut_mask = "CCCC";
defparam \length_from_device[1]~I .output_mode = "reg_only";

maxv_lcell \length_from_device[0]~I (
	.clk(CLK),
	.datab(UC_OUT[11]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[0] ));
defparam \length_from_device[0]~I .operation_mode = "normal";
defparam \length_from_device[0]~I .synch_mode = "off";
defparam \length_from_device[0]~I .register_cascade_mode = "off";
defparam \length_from_device[0]~I .sum_lutc_input = "datac";
defparam \length_from_device[0]~I .lut_mask = "CCCC";
defparam \length_from_device[0]~I .output_mode = "reg_only";

maxv_lcell \LessThan2~37_I (
	.dataa(\write_control_mux[0] ),
	.datab(\length_from_device[0] ),
	.combout(\LessThan2~35 ),
	.cout(\LessThan2~37 ));
defparam \LessThan2~37_I .operation_mode = "arithmetic";
defparam \LessThan2~37_I .synch_mode = "off";
defparam \LessThan2~37_I .register_cascade_mode = "off";
defparam \LessThan2~37_I .sum_lutc_input = "datac";
defparam \LessThan2~37_I .lut_mask = "FF44";
defparam \LessThan2~37_I .output_mode = "none";

maxv_lcell \LessThan2~32_I (
	.dataa(\length_from_device[1] ),
	.datab(\write_control_mux[1] ),
	.cin(\LessThan2~37 ),
	.combout(\LessThan2~30 ),
	.cout(\LessThan2~32 ));
defparam \LessThan2~32_I .operation_mode = "arithmetic";
defparam \LessThan2~32_I .synch_mode = "off";
defparam \LessThan2~32_I .register_cascade_mode = "off";
defparam \LessThan2~32_I .sum_lutc_input = "cin";
defparam \LessThan2~32_I .lut_mask = "FF17";
defparam \LessThan2~32_I .output_mode = "none";

maxv_lcell \LessThan2~27_I (
	.dataa(\Add1~25 ),
	.datab(\length_from_device[2] ),
	.cin(\LessThan2~32 ),
	.combout(\LessThan2~25 ),
	.cout(\LessThan2~27 ));
defparam \LessThan2~27_I .operation_mode = "arithmetic";
defparam \LessThan2~27_I .synch_mode = "off";
defparam \LessThan2~27_I .register_cascade_mode = "off";
defparam \LessThan2~27_I .sum_lutc_input = "cin";
defparam \LessThan2~27_I .lut_mask = "FF4D";
defparam \LessThan2~27_I .output_mode = "none";

maxv_lcell \LessThan2~22_I (
	.dataa(\Add1~20 ),
	.datab(\length_from_device[3] ),
	.cin(\LessThan2~27 ),
	.combout(\LessThan2~20 ),
	.cout(\LessThan2~22 ));
defparam \LessThan2~22_I .operation_mode = "arithmetic";
defparam \LessThan2~22_I .synch_mode = "off";
defparam \LessThan2~22_I .register_cascade_mode = "off";
defparam \LessThan2~22_I .sum_lutc_input = "cin";
defparam \LessThan2~22_I .lut_mask = "FF2B";
defparam \LessThan2~22_I .output_mode = "none";

maxv_lcell \LessThan2~17_I (
	.dataa(\Add1~15 ),
	.datab(\length_from_device[4] ),
	.cin(\LessThan2~22 ),
	.combout(\LessThan2~15 ),
	.cout(\LessThan2~17 ));
defparam \LessThan2~17_I .operation_mode = "arithmetic";
defparam \LessThan2~17_I .synch_mode = "off";
defparam \LessThan2~17_I .register_cascade_mode = "off";
defparam \LessThan2~17_I .sum_lutc_input = "cin";
defparam \LessThan2~17_I .lut_mask = "FF4D";
defparam \LessThan2~17_I .output_mode = "none";

maxv_lcell \length_from_device[6]~I (
	.clk(CLK),
	.datac(UC_OUT[17]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[6] ));
defparam \length_from_device[6]~I .operation_mode = "normal";
defparam \length_from_device[6]~I .synch_mode = "off";
defparam \length_from_device[6]~I .register_cascade_mode = "off";
defparam \length_from_device[6]~I .sum_lutc_input = "datac";
defparam \length_from_device[6]~I .lut_mask = "F0F0";
defparam \length_from_device[6]~I .output_mode = "reg_only";

maxv_lcell \length_from_device[5]~I (
	.clk(CLK),
	.dataa(UC_OUT[16]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\length_from_device[5] ));
defparam \length_from_device[5]~I .operation_mode = "normal";
defparam \length_from_device[5]~I .synch_mode = "off";
defparam \length_from_device[5]~I .register_cascade_mode = "off";
defparam \length_from_device[5]~I .sum_lutc_input = "datac";
defparam \length_from_device[5]~I .lut_mask = "AAAA";
defparam \length_from_device[5]~I .output_mode = "reg_only";

maxv_lcell \LessThan2~12_I (
	.dataa(\Add1~10 ),
	.datab(\length_from_device[5] ),
	.cin(\LessThan2~17 ),
	.combout(\LessThan2~10 ),
	.cout(\LessThan2~12 ));
defparam \LessThan2~12_I .operation_mode = "arithmetic";
defparam \LessThan2~12_I .synch_mode = "off";
defparam \LessThan2~12_I .register_cascade_mode = "off";
defparam \LessThan2~12_I .sum_lutc_input = "cin";
defparam \LessThan2~12_I .lut_mask = "FF2B";
defparam \LessThan2~12_I .output_mode = "none";

maxv_lcell \LessThan2~7_I (
	.dataa(\Add1~5 ),
	.datab(\length_from_device[6] ),
	.cin(\LessThan2~12 ),
	.combout(\LessThan2~5 ),
	.cout(\LessThan2~7 ));
defparam \LessThan2~7_I .operation_mode = "arithmetic";
defparam \LessThan2~7_I .synch_mode = "off";
defparam \LessThan2~7_I .register_cascade_mode = "off";
defparam \LessThan2~7_I .sum_lutc_input = "cin";
defparam \LessThan2~7_I .lut_mask = "FF4D";
defparam \LessThan2~7_I .output_mode = "none";

maxv_lcell \LessThan2~0_I (
	.datab(\length_from_device[7] ),
	.datad(\Add1~0 ),
	.cin(\LessThan2~7 ),
	.combout(\LessThan2~0 ));
defparam \LessThan2~0_I .operation_mode = "normal";
defparam \LessThan2~0_I .synch_mode = "off";
defparam \LessThan2~0_I .register_cascade_mode = "off";
defparam \LessThan2~0_I .sum_lutc_input = "cin";
defparam \LessThan2~0_I .lut_mask = "C0FC";
defparam \LessThan2~0_I .output_mode = "comb_only";

maxv_lcell \command_from_device[1]~I (
	.clk(CLK),
	.dataa(\command_from_device[2] ),
	.datab(\command_from_device[0] ),
	.datac(UC_OUT[20]),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\always0~0 ),
	.combout(\WRITE_BYTE[5]~0 ),
	.regout(\command_from_device[1] ));
defparam \command_from_device[1]~I .operation_mode = "normal";
defparam \command_from_device[1]~I .synch_mode = "on";
defparam \command_from_device[1]~I .register_cascade_mode = "off";
defparam \command_from_device[1]~I .sum_lutc_input = "qfbk";
defparam \command_from_device[1]~I .lut_mask = "1414";
defparam \command_from_device[1]~I .output_mode = "reg_and_comb";

maxv_lcell \command_from_device[0]~I (
	.clk(CLK),
	.dataa(\command_from_device[2] ),
	.datac(UC_OUT[19]),
	.datad(\command_from_device[1] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\always0~0 ),
	.combout(\WideOr2~0 ),
	.regout(\command_from_device[0] ));
defparam \command_from_device[0]~I .operation_mode = "normal";
defparam \command_from_device[0]~I .synch_mode = "on";
defparam \command_from_device[0]~I .register_cascade_mode = "off";
defparam \command_from_device[0]~I .sum_lutc_input = "qfbk";
defparam \command_from_device[0]~I .lut_mask = "0F5A";
defparam \command_from_device[0]~I .output_mode = "reg_and_comb";

maxv_lcell \Selector8~2_I (
	.dataa(\write_control_mux[1] ),
	.datab(\write_control_mux[0] ),
	.datac(write_data_byte),
	.datad(\WRITE_BYTE[5]~0 ),
	.combout(\Selector8~2 ));
defparam \Selector8~2_I .operation_mode = "normal";
defparam \Selector8~2_I .synch_mode = "off";
defparam \Selector8~2_I .register_cascade_mode = "off";
defparam \Selector8~2_I .sum_lutc_input = "datac";
defparam \Selector8~2_I .lut_mask = "4C6E";
defparam \Selector8~2_I .output_mode = "comb_only";

maxv_lcell \write_data_byte~I (
	.clk(CLK),
	.dataa(\Selector8~1 ),
	.datab(\LessThan2~0 ),
	.datac(\write_control_mux[1] ),
	.datad(\Selector8~2 ),
	.aclr(__ALT_INV__RST_N),
	.regout(write_data_byte));
defparam \write_data_byte~I .operation_mode = "normal";
defparam \write_data_byte~I .synch_mode = "off";
defparam \write_data_byte~I .register_cascade_mode = "off";
defparam \write_data_byte~I .sum_lutc_input = "datac";
defparam \write_data_byte~I .lut_mask = "11B3";
defparam \write_data_byte~I .output_mode = "reg_only";

maxv_lcell \UC_IN~22_I (
	.datac(write_data_byte),
	.datad(\state[8] ),
	.combout(\UC_IN~22 ));
defparam \UC_IN~22_I .operation_mode = "normal";
defparam \UC_IN~22_I .synch_mode = "off";
defparam \UC_IN~22_I .register_cascade_mode = "off";
defparam \UC_IN~22_I .sum_lutc_input = "datac";
defparam \UC_IN~22_I .lut_mask = "0F00";
defparam \UC_IN~22_I .output_mode = "comb_only";

maxv_lcell \command_from_device[2]~I (
	.clk(CLK),
	.dataa(\UC_IN~22 ),
	.datab(\command_from_device[1] ),
	.datac(UC_OUT[21]),
	.datad(\command_from_device[0] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\always0~0 ),
	.combout(\UC_IN~23 ),
	.regout(\command_from_device[2] ));
defparam \command_from_device[2]~I .operation_mode = "normal";
defparam \command_from_device[2]~I .synch_mode = "on";
defparam \command_from_device[2]~I .register_cascade_mode = "off";
defparam \command_from_device[2]~I .sum_lutc_input = "qfbk";
defparam \command_from_device[2]~I .lut_mask = "0080";
defparam \command_from_device[2]~I .output_mode = "reg_and_comb";

maxv_lcell \next[0]~9_I (
	.datab(\WideOr2~0 ),
	.datac(write_data_byte),
	.datad(\state[8] ),
	.combout(\next[0]~9 ));
defparam \next[0]~9_I .operation_mode = "normal";
defparam \next[0]~9_I .synch_mode = "off";
defparam \next[0]~9_I .register_cascade_mode = "off";
defparam \next[0]~9_I .sum_lutc_input = "datac";
defparam \next[0]~9_I .lut_mask = "F300";
defparam \next[0]~9_I .output_mode = "comb_only";

maxv_lcell \Add3~32_I (
	.datab(\byte_count[0] ),
	.combout(\Add3~32 ),
	.cout(\Add3~34 ));
defparam \Add3~32_I .operation_mode = "arithmetic";
defparam \Add3~32_I .synch_mode = "off";
defparam \Add3~32_I .register_cascade_mode = "off";
defparam \Add3~32_I .sum_lutc_input = "datac";
defparam \Add3~32_I .lut_mask = "33CC";
defparam \Add3~32_I .output_mode = "comb_only";

maxv_lcell \Add3~37_I (
	.dataa(\byte_count[1] ),
	.cin(\Add3~34 ),
	.combout(\Add3~37 ),
	.cout(\Add3~39 ));
defparam \Add3~37_I .operation_mode = "arithmetic";
defparam \Add3~37_I .synch_mode = "off";
defparam \Add3~37_I .register_cascade_mode = "off";
defparam \Add3~37_I .sum_lutc_input = "cin";
defparam \Add3~37_I .lut_mask = "5A5F";
defparam \Add3~37_I .output_mode = "comb_only";

maxv_lcell \Add3~27_I (
	.datab(\byte_count[2] ),
	.cin(\Add3~39 ),
	.combout(\Add3~27 ),
	.cout(\Add3~29 ));
defparam \Add3~27_I .operation_mode = "arithmetic";
defparam \Add3~27_I .synch_mode = "off";
defparam \Add3~27_I .register_cascade_mode = "off";
defparam \Add3~27_I .sum_lutc_input = "cin";
defparam \Add3~27_I .lut_mask = "C30C";
defparam \Add3~27_I .output_mode = "comb_only";

maxv_lcell \byte_count[2]~I (
	.clk(CLK),
	.dataa(\byte_count[0]~12 ),
	.datab(\Add3~6 ),
	.datac(\Add3~27 ),
	.datad(\byte_count[2] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[2] ));
defparam \byte_count[2]~I .operation_mode = "normal";
defparam \byte_count[2]~I .synch_mode = "off";
defparam \byte_count[2]~I .register_cascade_mode = "off";
defparam \byte_count[2]~I .sum_lutc_input = "datac";
defparam \byte_count[2]~I .lut_mask = "B3A0";
defparam \byte_count[2]~I .output_mode = "reg_only";

maxv_lcell \Add3~22_I (
	.dataa(\byte_count[3] ),
	.cin(\Add3~29 ),
	.combout(\Add3~22 ),
	.cout(\Add3~24 ));
defparam \Add3~22_I .operation_mode = "arithmetic";
defparam \Add3~22_I .synch_mode = "off";
defparam \Add3~22_I .register_cascade_mode = "off";
defparam \Add3~22_I .sum_lutc_input = "cin";
defparam \Add3~22_I .lut_mask = "5A5F";
defparam \Add3~22_I .output_mode = "comb_only";

maxv_lcell \byte_count[3]~I (
	.clk(CLK),
	.dataa(\Add3~22 ),
	.datab(\Add3~6 ),
	.datac(\byte_count[0]~12 ),
	.datad(\byte_count[3] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[3] ));
defparam \byte_count[3]~I .operation_mode = "normal";
defparam \byte_count[3]~I .synch_mode = "off";
defparam \byte_count[3]~I .register_cascade_mode = "off";
defparam \byte_count[3]~I .sum_lutc_input = "datac";
defparam \byte_count[3]~I .lut_mask = "B3A0";
defparam \byte_count[3]~I .output_mode = "reg_only";

maxv_lcell \Add3~17_I (
	.datab(\byte_count[4] ),
	.cin(\Add3~24 ),
	.combout(\Add3~17 ),
	.cout(\Add3~19 ));
defparam \Add3~17_I .operation_mode = "arithmetic";
defparam \Add3~17_I .synch_mode = "off";
defparam \Add3~17_I .register_cascade_mode = "off";
defparam \Add3~17_I .sum_lutc_input = "cin";
defparam \Add3~17_I .lut_mask = "C30C";
defparam \Add3~17_I .output_mode = "comb_only";

maxv_lcell \byte_count[4]~I (
	.clk(CLK),
	.dataa(\Add3~17 ),
	.datab(\Add3~6 ),
	.datac(\byte_count[0]~12 ),
	.datad(\byte_count[4] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[4] ));
defparam \byte_count[4]~I .operation_mode = "normal";
defparam \byte_count[4]~I .synch_mode = "off";
defparam \byte_count[4]~I .register_cascade_mode = "off";
defparam \byte_count[4]~I .sum_lutc_input = "datac";
defparam \byte_count[4]~I .lut_mask = "B3A0";
defparam \byte_count[4]~I .output_mode = "reg_only";

maxv_lcell \Add3~12_I (
	.datab(\byte_count[5] ),
	.cin(\Add3~19 ),
	.combout(\Add3~12 ),
	.cout(\Add3~14 ));
defparam \Add3~12_I .operation_mode = "arithmetic";
defparam \Add3~12_I .synch_mode = "off";
defparam \Add3~12_I .register_cascade_mode = "off";
defparam \Add3~12_I .sum_lutc_input = "cin";
defparam \Add3~12_I .lut_mask = "3C3F";
defparam \Add3~12_I .output_mode = "comb_only";

maxv_lcell \byte_count[5]~I (
	.clk(CLK),
	.dataa(\byte_count[5] ),
	.datab(\Add3~6 ),
	.datac(\byte_count[0]~12 ),
	.datad(\Add3~12 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[5] ));
defparam \byte_count[5]~I .operation_mode = "normal";
defparam \byte_count[5]~I .synch_mode = "off";
defparam \byte_count[5]~I .register_cascade_mode = "off";
defparam \byte_count[5]~I .sum_lutc_input = "datac";
defparam \byte_count[5]~I .lut_mask = "F222";
defparam \byte_count[5]~I .output_mode = "reg_only";

maxv_lcell \Add3~7_I (
	.dataa(\byte_count[6] ),
	.cin(\Add3~14 ),
	.combout(\Add3~7 ),
	.cout(\Add3~9 ));
defparam \Add3~7_I .operation_mode = "arithmetic";
defparam \Add3~7_I .synch_mode = "off";
defparam \Add3~7_I .register_cascade_mode = "off";
defparam \Add3~7_I .sum_lutc_input = "cin";
defparam \Add3~7_I .lut_mask = "A50A";
defparam \Add3~7_I .output_mode = "comb_only";

maxv_lcell \byte_count[6]~I (
	.clk(CLK),
	.dataa(\byte_count[0]~12 ),
	.datab(\Add3~6 ),
	.datac(\byte_count[6] ),
	.datad(\Add3~7 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[6] ));
defparam \byte_count[6]~I .operation_mode = "normal";
defparam \byte_count[6]~I .synch_mode = "off";
defparam \byte_count[6]~I .register_cascade_mode = "off";
defparam \byte_count[6]~I .sum_lutc_input = "datac";
defparam \byte_count[6]~I .lut_mask = "BA30";
defparam \byte_count[6]~I .output_mode = "reg_only";

maxv_lcell \Equal6~0_I (
	.dataa(\byte_count[7] ),
	.datab(\byte_count[4] ),
	.datac(\byte_count[6] ),
	.datad(\byte_count[5] ),
	.combout(\Equal6~0 ));
defparam \Equal6~0_I .operation_mode = "normal";
defparam \Equal6~0_I .synch_mode = "off";
defparam \Equal6~0_I .register_cascade_mode = "off";
defparam \Equal6~0_I .sum_lutc_input = "datac";
defparam \Equal6~0_I .lut_mask = "0001";
defparam \Equal6~0_I .output_mode = "comb_only";

maxv_lcell \LessThan5~0_I (
	.dataa(\byte_count[1] ),
	.datab(\Equal6~0 ),
	.datac(\byte_count[2] ),
	.datad(\byte_count[3] ),
	.combout(\LessThan5~0 ));
defparam \LessThan5~0_I .operation_mode = "normal";
defparam \LessThan5~0_I .synch_mode = "off";
defparam \LessThan5~0_I .register_cascade_mode = "off";
defparam \LessThan5~0_I .sum_lutc_input = "datac";
defparam \LessThan5~0_I .lut_mask = "0004";
defparam \LessThan5~0_I .output_mode = "comb_only";

maxv_lcell \next~3_I (
	.dataa(\command_byte~0 ),
	.datab(\state[1] ),
	.datac(\byte_count[0] ),
	.datad(\LessThan5~0 ),
	.combout(\next~3 ));
defparam \next~3_I .operation_mode = "normal";
defparam \next~3_I .synch_mode = "off";
defparam \next~3_I .register_cascade_mode = "off";
defparam \next~3_I .sum_lutc_input = "datac";
defparam \next~3_I .lut_mask = "0800";
defparam \next~3_I .output_mode = "comb_only";

maxv_lcell \byte_count_reg~0_I (
	.dataa(block_read_byte),
	.datab(\state[3] ),
	.datac(\next~3 ),
	.datad(\always7~0 ),
	.combout(\byte_count_reg~0 ));
defparam \byte_count_reg~0_I .operation_mode = "normal";
defparam \byte_count_reg~0_I .synch_mode = "off";
defparam \byte_count_reg~0_I .register_cascade_mode = "off";
defparam \byte_count_reg~0_I .sum_lutc_input = "datac";
defparam \byte_count_reg~0_I .lut_mask = "F7F3";
defparam \byte_count_reg~0_I .output_mode = "comb_only";

maxv_lcell \byte_count_reg~I (
	.clk(CLK),
	.dataa(\next~3 ),
	.datab(byte_count_reg),
	.datac(\always7~2 ),
	.datad(\byte_count_reg~0 ),
	.aclr(__ALT_INV__RST_N),
	.regout(byte_count_reg));
defparam \byte_count_reg~I .operation_mode = "normal";
defparam \byte_count_reg~I .synch_mode = "off";
defparam \byte_count_reg~I .register_cascade_mode = "off";
defparam \byte_count_reg~I .sum_lutc_input = "datac";
defparam \byte_count_reg~I .lut_mask = "DC50";
defparam \byte_count_reg~I .output_mode = "reg_only";

maxv_lcell \state[2]~I (
	.clk(CLK),
	.datab(DATA_BYTE_READY),
	.datac(\state[2] ),
	.datad(\next~3 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[2] ));
defparam \state[2]~I .operation_mode = "normal";
defparam \state[2]~I .synch_mode = "off";
defparam \state[2]~I .register_cascade_mode = "off";
defparam \state[2]~I .sum_lutc_input = "datac";
defparam \state[2]~I .lut_mask = "FFC0";
defparam \state[2]~I .output_mode = "reg_only";

maxv_lcell \control_multiplexor[5]~I (
	.clk(CLK),
	.dataa(\control_multiplexor[3] ),
	.datac(ENDPOINT_DECODE[5]),
	.datad(\control_multiplexor[4] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\state[2] ),
	.combout(\Decoder1~0 ),
	.regout(\control_multiplexor[5] ));
defparam \control_multiplexor[5]~I .operation_mode = "normal";
defparam \control_multiplexor[5]~I .synch_mode = "on";
defparam \control_multiplexor[5]~I .register_cascade_mode = "off";
defparam \control_multiplexor[5]~I .sum_lutc_input = "qfbk";
defparam \control_multiplexor[5]~I .lut_mask = "0050";
defparam \control_multiplexor[5]~I .output_mode = "reg_and_comb";

maxv_lcell \control_multiplexor[4]~I (
	.clk(CLK),
	.dataa(\control_multiplexor[3] ),
	.datab(\Equal6~2 ),
	.datac(ENDPOINT_DECODE[4]),
	.datad(\control_multiplexor[5] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\state[2] ),
	.combout(\uc_in_payload[0]~0 ),
	.regout(\control_multiplexor[4] ));
defparam \control_multiplexor[4]~I .operation_mode = "normal";
defparam \control_multiplexor[4]~I .synch_mode = "on";
defparam \control_multiplexor[4]~I .register_cascade_mode = "off";
defparam \control_multiplexor[4]~I .sum_lutc_input = "qfbk";
defparam \control_multiplexor[4]~I .lut_mask = "015A";
defparam \control_multiplexor[4]~I .output_mode = "reg_and_comb";

maxv_lcell \control_multiplexor[3]~I (
	.clk(CLK),
	.dataa(\state[3] ),
	.datab(\control_multiplexor[4] ),
	.datac(ENDPOINT_DECODE[3]),
	.datad(\control_multiplexor[5] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\state[2] ),
	.combout(\uc_in_address[0]~0 ),
	.regout(\control_multiplexor[3] ));
defparam \control_multiplexor[3]~I .operation_mode = "normal";
defparam \control_multiplexor[3]~I .synch_mode = "on";
defparam \control_multiplexor[3]~I .register_cascade_mode = "off";
defparam \control_multiplexor[3]~I .sum_lutc_input = "qfbk";
defparam \control_multiplexor[3]~I .lut_mask = "0208";
defparam \control_multiplexor[3]~I .output_mode = "reg_and_comb";

maxv_lcell \data_byte_ready_delay_cnt[0]~I (
	.clk(CLK),
	.dataa(\state[4] ),
	.datab(\data_byte_ready_delay_cnt[0] ),
	.datac(\state[3] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\data_byte_ready_delay_cnt[0] ));
defparam \data_byte_ready_delay_cnt[0]~I .operation_mode = "normal";
defparam \data_byte_ready_delay_cnt[0]~I .synch_mode = "off";
defparam \data_byte_ready_delay_cnt[0]~I .register_cascade_mode = "off";
defparam \data_byte_ready_delay_cnt[0]~I .sum_lutc_input = "datac";
defparam \data_byte_ready_delay_cnt[0]~I .lut_mask = "3434";
defparam \data_byte_ready_delay_cnt[0]~I .output_mode = "reg_only";

maxv_lcell \data_byte_ready_delay_cnt[0]~0_I (
	.dataa(\state[3] ),
	.datac(\state[4] ),
	.combout(\data_byte_ready_delay_cnt[0]~0 ));
defparam \data_byte_ready_delay_cnt[0]~0_I .operation_mode = "normal";
defparam \data_byte_ready_delay_cnt[0]~0_I .synch_mode = "off";
defparam \data_byte_ready_delay_cnt[0]~0_I .register_cascade_mode = "off";
defparam \data_byte_ready_delay_cnt[0]~0_I .sum_lutc_input = "datac";
defparam \data_byte_ready_delay_cnt[0]~0_I .lut_mask = "FAFA";
defparam \data_byte_ready_delay_cnt[0]~0_I .output_mode = "comb_only";

maxv_lcell \data_byte_ready_delay_cnt[1]~I (
	.clk(CLK),
	.datac(\data_byte_ready_delay_cnt[0] ),
	.datad(\data_byte_ready_delay_cnt[1] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\__ALT_INV__state[3] ),
	.ena(\data_byte_ready_delay_cnt[0]~0 ),
	.regout(\data_byte_ready_delay_cnt[1] ));
defparam \data_byte_ready_delay_cnt[1]~I .operation_mode = "normal";
defparam \data_byte_ready_delay_cnt[1]~I .synch_mode = "on";
defparam \data_byte_ready_delay_cnt[1]~I .register_cascade_mode = "off";
defparam \data_byte_ready_delay_cnt[1]~I .sum_lutc_input = "datac";
defparam \data_byte_ready_delay_cnt[1]~I .lut_mask = "0FF0";
defparam \data_byte_ready_delay_cnt[1]~I .output_mode = "reg_only";

maxv_lcell \data_byte_ready_delay_cnt[2]~I (
	.clk(CLK),
	.datab(\data_byte_ready_delay_cnt[1] ),
	.datac(\data_byte_ready_delay_cnt[0] ),
	.datad(\data_byte_ready_delay_cnt[2] ),
	.aclr(__ALT_INV__RST_N),
	.sclr(\__ALT_INV__state[3] ),
	.ena(\data_byte_ready_delay_cnt[0]~0 ),
	.regout(\data_byte_ready_delay_cnt[2] ));
defparam \data_byte_ready_delay_cnt[2]~I .operation_mode = "normal";
defparam \data_byte_ready_delay_cnt[2]~I .synch_mode = "on";
defparam \data_byte_ready_delay_cnt[2]~I .register_cascade_mode = "off";
defparam \data_byte_ready_delay_cnt[2]~I .sum_lutc_input = "datac";
defparam \data_byte_ready_delay_cnt[2]~I .lut_mask = "3FC0";
defparam \data_byte_ready_delay_cnt[2]~I .output_mode = "reg_only";

maxv_lcell \next[4]~6_I (
	.dataa(\Decoder1~0 ),
	.datab(\data_byte_ready_delay_cnt[2] ),
	.datac(\state[3] ),
	.datad(\data_byte_ready_delay_cnt[1] ),
	.combout(\next[4]~6 ));
defparam \next[4]~6_I .operation_mode = "normal";
defparam \next[4]~6_I .synch_mode = "off";
defparam \next[4]~6_I .register_cascade_mode = "off";
defparam \next[4]~6_I .sum_lutc_input = "datac";
defparam \next[4]~6_I .lut_mask = "A080";
defparam \next[4]~6_I .output_mode = "comb_only";

maxv_lcell \state[4]~I (
	.clk(CLK),
	.dataa(\state[4] ),
	.datab(DATA_BYTE_READY),
	.datac(\LessThan7~0 ),
	.datad(\next[4]~6 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[4] ));
defparam \state[4]~I .operation_mode = "normal";
defparam \state[4]~I .synch_mode = "off";
defparam \state[4]~I .register_cascade_mode = "off";
defparam \state[4]~I .sum_lutc_input = "datac";
defparam \state[4]~I .lut_mask = "3302";
defparam \state[4]~I .output_mode = "reg_only";

maxv_lcell \always7~2_I (
	.dataa(block_read_byte),
	.datab(byte_count_reg),
	.datac(\state[4] ),
	.datad(\LessThan4~0 ),
	.combout(\always7~2 ));
defparam \always7~2_I .operation_mode = "normal";
defparam \always7~2_I .synch_mode = "off";
defparam \always7~2_I .register_cascade_mode = "off";
defparam \always7~2_I .sum_lutc_input = "datac";
defparam \always7~2_I .lut_mask = "0020";
defparam \always7~2_I .output_mode = "comb_only";

maxv_lcell \byte_count[0]~12_I (
	.dataa(block_read_byte),
	.datab(\always7~2 ),
	.datac(\next~3 ),
	.datad(\always7~0 ),
	.combout(\byte_count[0]~12 ));
defparam \byte_count[0]~12_I .operation_mode = "normal";
defparam \byte_count[0]~12_I .synch_mode = "off";
defparam \byte_count[0]~12_I .register_cascade_mode = "off";
defparam \byte_count[0]~12_I .sum_lutc_input = "datac";
defparam \byte_count[0]~12_I .lut_mask = "0D0C";
defparam \byte_count[0]~12_I .output_mode = "comb_only";

maxv_lcell \byte_count[0]~I (
	.clk(CLK),
	.dataa(\Add3~6 ),
	.datab(\byte_count[0]~12 ),
	.datac(\Add3~32 ),
	.datad(\byte_count[0] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[0] ));
defparam \byte_count[0]~I .operation_mode = "normal";
defparam \byte_count[0]~I .synch_mode = "off";
defparam \byte_count[0]~I .register_cascade_mode = "off";
defparam \byte_count[0]~I .sum_lutc_input = "datac";
defparam \byte_count[0]~I .lut_mask = "D5C0";
defparam \byte_count[0]~I .output_mode = "reg_only";

maxv_lcell \Equal6~1_I (
	.datab(\byte_count[2] ),
	.datac(\Equal6~0 ),
	.datad(\byte_count[3] ),
	.combout(\Equal6~1 ));
defparam \Equal6~1_I .operation_mode = "normal";
defparam \Equal6~1_I .synch_mode = "off";
defparam \Equal6~1_I .register_cascade_mode = "off";
defparam \Equal6~1_I .sum_lutc_input = "datac";
defparam \Equal6~1_I .lut_mask = "0030";
defparam \Equal6~1_I .output_mode = "comb_only";

maxv_lcell \Equal6~2_I (
	.dataa(\byte_count[1] ),
	.datac(\byte_count[0] ),
	.datad(\Equal6~1 ),
	.combout(\Equal6~2 ));
defparam \Equal6~2_I .operation_mode = "normal";
defparam \Equal6~2_I .synch_mode = "off";
defparam \Equal6~2_I .register_cascade_mode = "off";
defparam \Equal6~2_I .sum_lutc_input = "datac";
defparam \Equal6~2_I .lut_mask = "A000";
defparam \Equal6~2_I .output_mode = "comb_only";

maxv_lcell \block_read_byte~0_I (
	.dataa(\state[3] ),
	.datac(\state[0] ),
	.combout(\block_read_byte~0 ));
defparam \block_read_byte~0_I .operation_mode = "normal";
defparam \block_read_byte~0_I .synch_mode = "off";
defparam \block_read_byte~0_I .register_cascade_mode = "off";
defparam \block_read_byte~0_I .sum_lutc_input = "datac";
defparam \block_read_byte~0_I .lut_mask = "FAFA";
defparam \block_read_byte~0_I .output_mode = "comb_only";

maxv_lcell \uc_in_length[0]~1_I (
	.dataa(\control_multiplexor[3] ),
	.datab(\control_multiplexor[4] ),
	.datac(\state[3] ),
	.datad(\control_multiplexor[5] ),
	.combout(\uc_in_length[0]~1 ));
defparam \uc_in_length[0]~1_I .operation_mode = "normal";
defparam \uc_in_length[0]~1_I .synch_mode = "off";
defparam \uc_in_length[0]~1_I .register_cascade_mode = "off";
defparam \uc_in_length[0]~1_I .sum_lutc_input = "datac";
defparam \uc_in_length[0]~1_I .lut_mask = "1000";
defparam \uc_in_length[0]~1_I .output_mode = "comb_only";

maxv_lcell \block_read_byte~I (
	.clk(CLK),
	.dataa(\Equal6~2 ),
	.datab(\block_read_byte~0 ),
	.datac(\uc_in_length[0]~1 ),
	.datad(block_read_byte),
	.aclr(__ALT_INV__RST_N),
	.regout(block_read_byte));
defparam \block_read_byte~I .operation_mode = "normal";
defparam \block_read_byte~I .synch_mode = "off";
defparam \block_read_byte~I .register_cascade_mode = "off";
defparam \block_read_byte~I .sum_lutc_input = "datac";
defparam \block_read_byte~I .lut_mask = "ECA0";
defparam \block_read_byte~I .output_mode = "reg_only";

maxv_lcell \byte_count[1]~13_I (
	.dataa(block_read_byte),
	.datab(\always7~2 ),
	.datac(\always7~0 ),
	.datad(\Add3~37 ),
	.combout(\byte_count[1]~13 ));
defparam \byte_count[1]~13_I .operation_mode = "normal";
defparam \byte_count[1]~13_I .synch_mode = "off";
defparam \byte_count[1]~13_I .register_cascade_mode = "off";
defparam \byte_count[1]~13_I .sum_lutc_input = "datac";
defparam \byte_count[1]~13_I .lut_mask = "DC00";
defparam \byte_count[1]~13_I .output_mode = "comb_only";

maxv_lcell \byte_count[1]~I (
	.clk(CLK),
	.dataa(\byte_count[1] ),
	.datab(\byte_count[1]~13 ),
	.datac(\next~3 ),
	.datad(\Add3~6 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[1] ));
defparam \byte_count[1]~I .operation_mode = "normal";
defparam \byte_count[1]~I .synch_mode = "off";
defparam \byte_count[1]~I .register_cascade_mode = "off";
defparam \byte_count[1]~I .sum_lutc_input = "datac";
defparam \byte_count[1]~I .lut_mask = "FCAA";
defparam \byte_count[1]~I .output_mode = "reg_only";

maxv_lcell \LessThan4~0_I (
	.dataa(\byte_count[1] ),
	.datac(\byte_count[0] ),
	.datad(\Equal6~1 ),
	.combout(\LessThan4~0 ));
defparam \LessThan4~0_I .operation_mode = "normal";
defparam \LessThan4~0_I .synch_mode = "off";
defparam \LessThan4~0_I .register_cascade_mode = "off";
defparam \LessThan4~0_I .sum_lutc_input = "datac";
defparam \LessThan4~0_I .lut_mask = "5F00";
defparam \LessThan4~0_I .output_mode = "comb_only";

maxv_lcell \Add3~5_I (
	.dataa(\LessThan4~0 ),
	.datab(byte_count_reg),
	.datac(\state[0] ),
	.datad(\state[3] ),
	.combout(\Add3~5 ));
defparam \Add3~5_I .operation_mode = "normal";
defparam \Add3~5_I .synch_mode = "off";
defparam \Add3~5_I .register_cascade_mode = "off";
defparam \Add3~5_I .sum_lutc_input = "datac";
defparam \Add3~5_I .lut_mask = "0105";
defparam \Add3~5_I .output_mode = "comb_only";

maxv_lcell \always7~1_I (
	.dataa(block_read_byte),
	.datad(\always7~0 ),
	.combout(\always7~1 ));
defparam \always7~1_I .operation_mode = "normal";
defparam \always7~1_I .synch_mode = "off";
defparam \always7~1_I .register_cascade_mode = "off";
defparam \always7~1_I .sum_lutc_input = "datac";
defparam \always7~1_I .lut_mask = "5500";
defparam \always7~1_I .output_mode = "comb_only";

maxv_lcell \Add3~6_I (
	.dataa(\Add3~5 ),
	.datab(\always7~2 ),
	.datac(\next~3 ),
	.datad(\always7~1 ),
	.combout(\Add3~6 ));
defparam \Add3~6_I .operation_mode = "normal";
defparam \Add3~6_I .synch_mode = "off";
defparam \Add3~6_I .register_cascade_mode = "off";
defparam \Add3~6_I .sum_lutc_input = "datac";
defparam \Add3~6_I .lut_mask = "FFFE";
defparam \Add3~6_I .output_mode = "comb_only";

maxv_lcell \Add3~0_I (
	.datad(\byte_count[7] ),
	.cin(\Add3~9 ),
	.combout(\Add3~0 ));
defparam \Add3~0_I .operation_mode = "normal";
defparam \Add3~0_I .synch_mode = "off";
defparam \Add3~0_I .register_cascade_mode = "off";
defparam \Add3~0_I .sum_lutc_input = "cin";
defparam \Add3~0_I .lut_mask = "0FF0";
defparam \Add3~0_I .output_mode = "comb_only";

maxv_lcell \byte_count[7]~I (
	.clk(CLK),
	.dataa(\byte_count[7] ),
	.datab(\Add3~6 ),
	.datac(\byte_count[0]~12 ),
	.datad(\Add3~0 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\byte_count[7] ));
defparam \byte_count[7]~I .operation_mode = "normal";
defparam \byte_count[7]~I .synch_mode = "off";
defparam \byte_count[7]~I .register_cascade_mode = "off";
defparam \byte_count[7]~I .sum_lutc_input = "datac";
defparam \byte_count[7]~I .lut_mask = "F222";
defparam \byte_count[7]~I .output_mode = "reg_only";

maxv_lcell \length_to_device[7]~0_I (
	.datab(RST_N),
	.datad(\uc_in_length[0]~1 ),
	.combout(\length_to_device[7]~0 ));
defparam \length_to_device[7]~0_I .operation_mode = "normal";
defparam \length_to_device[7]~0_I .synch_mode = "off";
defparam \length_to_device[7]~0_I .register_cascade_mode = "off";
defparam \length_to_device[7]~0_I .sum_lutc_input = "datac";
defparam \length_to_device[7]~0_I .lut_mask = "CC00";
defparam \length_to_device[7]~0_I .output_mode = "comb_only";

maxv_lcell \length_to_device[7]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[7]),
	.datad(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~8 ),
	.regout(\length_to_device[7] ));
defparam \length_to_device[7]~I .operation_mode = "normal";
defparam \length_to_device[7]~I .synch_mode = "off";
defparam \length_to_device[7]~I .register_cascade_mode = "off";
defparam \length_to_device[7]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[7]~I .lut_mask = "AAF0";
defparam \length_to_device[7]~I .output_mode = "reg_and_comb";

maxv_lcell \length_to_device[4]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[4]),
	.datab(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~5 ),
	.regout(\length_to_device[4] ));
defparam \length_to_device[4]~I .operation_mode = "normal";
defparam \length_to_device[4]~I .synch_mode = "off";
defparam \length_to_device[4]~I .register_cascade_mode = "off";
defparam \length_to_device[4]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[4]~I .lut_mask = "B8B8";
defparam \length_to_device[4]~I .output_mode = "reg_and_comb";

maxv_lcell \length_to_device[3]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[3]),
	.datab(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~4 ),
	.regout(\length_to_device[3] ));
defparam \length_to_device[3]~I .operation_mode = "normal";
defparam \length_to_device[3]~I .synch_mode = "off";
defparam \length_to_device[3]~I .register_cascade_mode = "off";
defparam \length_to_device[3]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[3]~I .lut_mask = "B8B8";
defparam \length_to_device[3]~I .output_mode = "reg_and_comb";

maxv_lcell \length_to_device[2]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[2]),
	.datab(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~3 ),
	.regout(\length_to_device[2] ));
defparam \length_to_device[2]~I .operation_mode = "normal";
defparam \length_to_device[2]~I .synch_mode = "off";
defparam \length_to_device[2]~I .register_cascade_mode = "off";
defparam \length_to_device[2]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[2]~I .lut_mask = "B8B8";
defparam \length_to_device[2]~I .output_mode = "reg_and_comb";

maxv_lcell \length_to_device[1]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[1]),
	.datab(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~2 ),
	.regout(\length_to_device[1] ));
defparam \length_to_device[1]~I .operation_mode = "normal";
defparam \length_to_device[1]~I .synch_mode = "off";
defparam \length_to_device[1]~I .register_cascade_mode = "off";
defparam \length_to_device[1]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[1]~I .lut_mask = "B8B8";
defparam \length_to_device[1]~I .output_mode = "reg_and_comb";

maxv_lcell \length_to_device[0]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[0]),
	.datab(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~0 ),
	.regout(\length_to_device[0] ));
defparam \length_to_device[0]~I .operation_mode = "normal";
defparam \length_to_device[0]~I .synch_mode = "off";
defparam \length_to_device[0]~I .register_cascade_mode = "off";
defparam \length_to_device[0]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[0]~I .lut_mask = "B8B8";
defparam \length_to_device[0]~I .output_mode = "reg_and_comb";

maxv_lcell \Add5~35_I (
	.datab(\length_to_device[0] ),
	.combout(\Add5~35 ),
	.cout(\Add5~37 ));
defparam \Add5~35_I .operation_mode = "arithmetic";
defparam \Add5~35_I .synch_mode = "off";
defparam \Add5~35_I .register_cascade_mode = "off";
defparam \Add5~35_I .sum_lutc_input = "datac";
defparam \Add5~35_I .lut_mask = "33CC";
defparam \Add5~35_I .output_mode = "comb_only";

maxv_lcell \Add5~30_I (
	.dataa(\length_to_device[1] ),
	.cin(\Add5~37 ),
	.combout(\Add5~30 ),
	.cout(\Add5~32 ));
defparam \Add5~30_I .operation_mode = "arithmetic";
defparam \Add5~30_I .synch_mode = "off";
defparam \Add5~30_I .register_cascade_mode = "off";
defparam \Add5~30_I .sum_lutc_input = "cin";
defparam \Add5~30_I .lut_mask = "A505";
defparam \Add5~30_I .output_mode = "comb_only";

maxv_lcell \Add5~25_I (
	.datab(\length_to_device[2] ),
	.cin(\Add5~32 ),
	.combout(\Add5~25 ),
	.cout(\Add5~27 ));
defparam \Add5~25_I .operation_mode = "arithmetic";
defparam \Add5~25_I .synch_mode = "off";
defparam \Add5~25_I .register_cascade_mode = "off";
defparam \Add5~25_I .sum_lutc_input = "cin";
defparam \Add5~25_I .lut_mask = "C30C";
defparam \Add5~25_I .output_mode = "comb_only";

maxv_lcell \Add5~20_I (
	.dataa(\length_to_device[3] ),
	.cin(\Add5~27 ),
	.combout(\Add5~20 ),
	.cout(\Add5~22 ));
defparam \Add5~20_I .operation_mode = "arithmetic";
defparam \Add5~20_I .synch_mode = "off";
defparam \Add5~20_I .register_cascade_mode = "off";
defparam \Add5~20_I .sum_lutc_input = "cin";
defparam \Add5~20_I .lut_mask = "5A5F";
defparam \Add5~20_I .output_mode = "comb_only";

maxv_lcell \Add5~15_I (
	.datab(\length_to_device[4] ),
	.cin(\Add5~22 ),
	.combout(\Add5~15 ),
	.cout(\Add5~17 ));
defparam \Add5~15_I .operation_mode = "arithmetic";
defparam \Add5~15_I .synch_mode = "off";
defparam \Add5~15_I .register_cascade_mode = "off";
defparam \Add5~15_I .sum_lutc_input = "cin";
defparam \Add5~15_I .lut_mask = "C30C";
defparam \Add5~15_I .output_mode = "comb_only";

maxv_lcell \length_to_device[6]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[6]),
	.datad(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~7 ),
	.regout(\length_to_device[6] ));
defparam \length_to_device[6]~I .operation_mode = "normal";
defparam \length_to_device[6]~I .synch_mode = "off";
defparam \length_to_device[6]~I .register_cascade_mode = "off";
defparam \length_to_device[6]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[6]~I .lut_mask = "AAF0";
defparam \length_to_device[6]~I .output_mode = "reg_and_comb";

maxv_lcell \length_to_device[5]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[5]),
	.datab(\Equal6~2 ),
	.aclr(gnd),
	.ena(\length_to_device[7]~0 ),
	.combout(\uc_in_length~6 ),
	.regout(\length_to_device[5] ));
defparam \length_to_device[5]~I .operation_mode = "normal";
defparam \length_to_device[5]~I .synch_mode = "off";
defparam \length_to_device[5]~I .register_cascade_mode = "off";
defparam \length_to_device[5]~I .sum_lutc_input = "qfbk";
defparam \length_to_device[5]~I .lut_mask = "B8B8";
defparam \length_to_device[5]~I .output_mode = "reg_and_comb";

maxv_lcell \Add5~10_I (
	.datab(\length_to_device[5] ),
	.cin(\Add5~17 ),
	.combout(\Add5~10 ),
	.cout(\Add5~12 ));
defparam \Add5~10_I .operation_mode = "arithmetic";
defparam \Add5~10_I .synch_mode = "off";
defparam \Add5~10_I .register_cascade_mode = "off";
defparam \Add5~10_I .sum_lutc_input = "cin";
defparam \Add5~10_I .lut_mask = "3C3F";
defparam \Add5~10_I .output_mode = "comb_only";

maxv_lcell \Add5~5_I (
	.dataa(\length_to_device[6] ),
	.cin(\Add5~12 ),
	.combout(\Add5~5 ),
	.cout(\Add5~7 ));
defparam \Add5~5_I .operation_mode = "arithmetic";
defparam \Add5~5_I .synch_mode = "off";
defparam \Add5~5_I .register_cascade_mode = "off";
defparam \Add5~5_I .sum_lutc_input = "cin";
defparam \Add5~5_I .lut_mask = "A50A";
defparam \Add5~5_I .output_mode = "comb_only";

maxv_lcell \Add5~0_I (
	.dataa(\length_to_device[7] ),
	.cin(\Add5~7 ),
	.combout(\Add5~0 ));
defparam \Add5~0_I .operation_mode = "normal";
defparam \Add5~0_I .synch_mode = "off";
defparam \Add5~0_I .register_cascade_mode = "off";
defparam \Add5~0_I .sum_lutc_input = "cin";
defparam \Add5~0_I .lut_mask = "5A5A";
defparam \Add5~0_I .output_mode = "comb_only";

maxv_lcell \LessThan7~37_I (
	.dataa(\Add5~35 ),
	.datab(\byte_count[0] ),
	.combout(\LessThan7~35 ),
	.cout(\LessThan7~37 ));
defparam \LessThan7~37_I .operation_mode = "arithmetic";
defparam \LessThan7~37_I .synch_mode = "off";
defparam \LessThan7~37_I .register_cascade_mode = "off";
defparam \LessThan7~37_I .sum_lutc_input = "datac";
defparam \LessThan7~37_I .lut_mask = "FF44";
defparam \LessThan7~37_I .output_mode = "none";

maxv_lcell \LessThan7~32_I (
	.dataa(\byte_count[1] ),
	.datab(\Add5~30 ),
	.cin(\LessThan7~37 ),
	.combout(\LessThan7~30 ),
	.cout(\LessThan7~32 ));
defparam \LessThan7~32_I .operation_mode = "arithmetic";
defparam \LessThan7~32_I .synch_mode = "off";
defparam \LessThan7~32_I .register_cascade_mode = "off";
defparam \LessThan7~32_I .sum_lutc_input = "cin";
defparam \LessThan7~32_I .lut_mask = "FF4D";
defparam \LessThan7~32_I .output_mode = "none";

maxv_lcell \LessThan7~27_I (
	.dataa(\byte_count[2] ),
	.datab(\Add5~25 ),
	.cin(\LessThan7~32 ),
	.combout(\LessThan7~25 ),
	.cout(\LessThan7~27 ));
defparam \LessThan7~27_I .operation_mode = "arithmetic";
defparam \LessThan7~27_I .synch_mode = "off";
defparam \LessThan7~27_I .register_cascade_mode = "off";
defparam \LessThan7~27_I .sum_lutc_input = "cin";
defparam \LessThan7~27_I .lut_mask = "FF2B";
defparam \LessThan7~27_I .output_mode = "none";

maxv_lcell \LessThan7~22_I (
	.dataa(\Add5~20 ),
	.datab(\byte_count[3] ),
	.cin(\LessThan7~27 ),
	.combout(\LessThan7~20 ),
	.cout(\LessThan7~22 ));
defparam \LessThan7~22_I .operation_mode = "arithmetic";
defparam \LessThan7~22_I .synch_mode = "off";
defparam \LessThan7~22_I .register_cascade_mode = "off";
defparam \LessThan7~22_I .sum_lutc_input = "cin";
defparam \LessThan7~22_I .lut_mask = "FF2B";
defparam \LessThan7~22_I .output_mode = "none";

maxv_lcell \LessThan7~17_I (
	.dataa(\byte_count[4] ),
	.datab(\Add5~15 ),
	.cin(\LessThan7~22 ),
	.combout(\LessThan7~15 ),
	.cout(\LessThan7~17 ));
defparam \LessThan7~17_I .operation_mode = "arithmetic";
defparam \LessThan7~17_I .synch_mode = "off";
defparam \LessThan7~17_I .register_cascade_mode = "off";
defparam \LessThan7~17_I .sum_lutc_input = "cin";
defparam \LessThan7~17_I .lut_mask = "FF2B";
defparam \LessThan7~17_I .output_mode = "none";

maxv_lcell \LessThan7~12_I (
	.dataa(\Add5~10 ),
	.datab(\byte_count[5] ),
	.cin(\LessThan7~17 ),
	.combout(\LessThan7~10 ),
	.cout(\LessThan7~12 ));
defparam \LessThan7~12_I .operation_mode = "arithmetic";
defparam \LessThan7~12_I .synch_mode = "off";
defparam \LessThan7~12_I .register_cascade_mode = "off";
defparam \LessThan7~12_I .sum_lutc_input = "cin";
defparam \LessThan7~12_I .lut_mask = "FF2B";
defparam \LessThan7~12_I .output_mode = "none";

maxv_lcell \LessThan7~7_I (
	.dataa(\byte_count[6] ),
	.datab(\Add5~5 ),
	.cin(\LessThan7~12 ),
	.combout(\LessThan7~5 ),
	.cout(\LessThan7~7 ));
defparam \LessThan7~7_I .operation_mode = "arithmetic";
defparam \LessThan7~7_I .synch_mode = "off";
defparam \LessThan7~7_I .register_cascade_mode = "off";
defparam \LessThan7~7_I .sum_lutc_input = "cin";
defparam \LessThan7~7_I .lut_mask = "FF2B";
defparam \LessThan7~7_I .output_mode = "none";

maxv_lcell \LessThan7~0_I (
	.datab(\byte_count[7] ),
	.datad(\Add5~0 ),
	.cin(\LessThan7~7 ),
	.combout(\LessThan7~0 ));
defparam \LessThan7~0_I .operation_mode = "normal";
defparam \LessThan7~0_I .synch_mode = "off";
defparam \LessThan7~0_I .register_cascade_mode = "off";
defparam \LessThan7~0_I .sum_lutc_input = "cin";
defparam \LessThan7~0_I .lut_mask = "C0FC";
defparam \LessThan7~0_I .output_mode = "comb_only";

maxv_lcell \next[0]~10_I (
	.datab(write_to_host),
	.datad(\state[0] ),
	.combout(\next[0]~10 ));
defparam \next[0]~10_I .operation_mode = "normal";
defparam \next[0]~10_I .synch_mode = "off";
defparam \next[0]~10_I .register_cascade_mode = "off";
defparam \next[0]~10_I .sum_lutc_input = "datac";
defparam \next[0]~10_I .lut_mask = "0033";
defparam \next[0]~10_I .output_mode = "comb_only";

maxv_lcell \next[0]~11_I (
	.dataa(\state[2] ),
	.datab(\Decoder1~0 ),
	.datac(\state[3] ),
	.datad(\next[0]~10 ),
	.combout(\next[0]~11 ));
defparam \next[0]~11_I .operation_mode = "normal";
defparam \next[0]~11_I .synch_mode = "off";
defparam \next[0]~11_I .register_cascade_mode = "off";
defparam \next[0]~11_I .sum_lutc_input = "datac";
defparam \next[0]~11_I .lut_mask = "FFBA";
defparam \next[0]~11_I .output_mode = "comb_only";

maxv_lcell \next[0]~12_I (
	.dataa(\LessThan7~0 ),
	.datab(\state[4] ),
	.datac(\next[0]~11 ),
	.datad(DATA_BYTE_READY),
	.combout(\next[0]~12 ));
defparam \next[0]~12_I .operation_mode = "normal";
defparam \next[0]~12_I .synch_mode = "off";
defparam \next[0]~12_I .register_cascade_mode = "off";
defparam \next[0]~12_I .sum_lutc_input = "datac";
defparam \next[0]~12_I .lut_mask = "88F8";
defparam \next[0]~12_I .output_mode = "comb_only";

maxv_lcell \state[0]~I (
	.clk(CLK),
	.dataa(\always7~0 ),
	.datab(\next[0]~9 ),
	.datac(\next[0]~12 ),
	.datad(\LessThan5~0 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[0] ));
defparam \state[0]~I .operation_mode = "normal";
defparam \state[0]~I .synch_mode = "off";
defparam \state[0]~I .register_cascade_mode = "off";
defparam \state[0]~I .sum_lutc_input = "datac";
defparam \state[0]~I .lut_mask = "0103";
defparam \state[0]~I .output_mode = "reg_only";

maxv_lcell \state[1]~I (
	.clk(CLK),
	.datab(DATA_BYTE_READY),
	.datad(\state[0] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[1] ));
defparam \state[1]~I .operation_mode = "normal";
defparam \state[1]~I .synch_mode = "off";
defparam \state[1]~I .register_cascade_mode = "off";
defparam \state[1]~I .sum_lutc_input = "datac";
defparam \state[1]~I .lut_mask = "00CC";
defparam \state[1]~I .output_mode = "reg_only";

maxv_lcell \always7~0_I (
	.dataa(\command_byte~0 ),
	.datab(\state[1] ),
	.datac(\byte_count[0] ),
	.datad(\LessThan5~0 ),
	.combout(\always7~0 ));
defparam \always7~0_I .operation_mode = "normal";
defparam \always7~0_I .synch_mode = "off";
defparam \always7~0_I .register_cascade_mode = "off";
defparam \always7~0_I .sum_lutc_input = "datac";
defparam \always7~0_I .lut_mask = "C4CC";
defparam \always7~0_I .output_mode = "comb_only";

maxv_lcell \next[3]~1_I (
	.dataa(\state[4] ),
	.datab(DATA_BYTE_READY),
	.datac(\LessThan7~0 ),
	.datad(\state[3] ),
	.combout(\next[3]~1 ));
defparam \next[3]~1_I .operation_mode = "normal";
defparam \next[3]~1_I .synch_mode = "off";
defparam \next[3]~1_I .register_cascade_mode = "off";
defparam \next[3]~1_I .sum_lutc_input = "datac";
defparam \next[3]~1_I .lut_mask = "CC08";
defparam \next[3]~1_I .output_mode = "comb_only";

maxv_lcell \next~0_I (
	.dataa(\Decoder1~0 ),
	.datab(\data_byte_ready_delay_cnt[2] ),
	.datac(\state[3] ),
	.datad(\data_byte_ready_delay_cnt[1] ),
	.combout(\next~0 ));
defparam \next~0_I .operation_mode = "normal";
defparam \next~0_I .synch_mode = "off";
defparam \next~0_I .register_cascade_mode = "off";
defparam \next~0_I .sum_lutc_input = "datac";
defparam \next~0_I .lut_mask = "0020";
defparam \next~0_I .output_mode = "comb_only";

maxv_lcell \state[3]~I (
	.clk(CLK),
	.dataa(\always7~0 ),
	.datab(\LessThan5~0 ),
	.datac(\next[3]~1 ),
	.datad(\next~0 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\state[3] ));
defparam \state[3]~I .operation_mode = "normal";
defparam \state[3]~I .synch_mode = "off";
defparam \state[3]~I .register_cascade_mode = "off";
defparam \state[3]~I .sum_lutc_input = "datac";
defparam \state[3]~I .lut_mask = "FFF2";
defparam \state[3]~I .output_mode = "reg_only";

maxv_lcell \ENDPOINT_EN~0_I (
	.dataa(\state[3] ),
	.datac(\state[2] ),
	.combout(\ENDPOINT_EN~0 ));
defparam \ENDPOINT_EN~0_I .operation_mode = "normal";
defparam \ENDPOINT_EN~0_I .synch_mode = "off";
defparam \ENDPOINT_EN~0_I .register_cascade_mode = "off";
defparam \ENDPOINT_EN~0_I .sum_lutc_input = "datac";
defparam \ENDPOINT_EN~0_I .lut_mask = "FAFA";
defparam \ENDPOINT_EN~0_I .output_mode = "comb_only";

maxv_lcell \transfer_busy~I (
	.datab(\state[6] ),
	.datac(\state[0] ),
	.datad(transfer_busy),
	.combout(transfer_busy));
defparam \transfer_busy~I .operation_mode = "normal";
defparam \transfer_busy~I .synch_mode = "off";
defparam \transfer_busy~I .register_cascade_mode = "off";
defparam \transfer_busy~I .sum_lutc_input = "datac";
defparam \transfer_busy~I .lut_mask = "F0C0";
defparam \transfer_busy~I .output_mode = "comb_only";

maxv_lcell \ENDPOINT_BUSY~0_I (
	.datac(write_to_host),
	.datad(transfer_busy),
	.combout(\ENDPOINT_BUSY~0 ));
defparam \ENDPOINT_BUSY~0_I .operation_mode = "normal";
defparam \ENDPOINT_BUSY~0_I .synch_mode = "off";
defparam \ENDPOINT_BUSY~0_I .register_cascade_mode = "off";
defparam \ENDPOINT_BUSY~0_I .sum_lutc_input = "datac";
defparam \ENDPOINT_BUSY~0_I .lut_mask = "FFF0";
defparam \ENDPOINT_BUSY~0_I .output_mode = "comb_only";

maxv_lcell \WRITE_EN~reg0_I (
	.clk(CLK),
	.dataa(WRITE_READY),
	.datab(\state[6] ),
	.datac(\WRITE_EN~reg0 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\WRITE_EN~reg0 ));
defparam \WRITE_EN~reg0_I .operation_mode = "normal";
defparam \WRITE_EN~reg0_I .synch_mode = "off";
defparam \WRITE_EN~reg0_I .register_cascade_mode = "off";
defparam \WRITE_EN~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_EN~reg0_I .lut_mask = "5C5C";
defparam \WRITE_EN~reg0_I .output_mode = "reg_only";

maxv_lcell \address_from_device[0]~I (
	.clk(CLK),
	.dataa(UC_OUT[8]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\address_from_device[0] ));
defparam \address_from_device[0]~I .operation_mode = "normal";
defparam \address_from_device[0]~I .synch_mode = "off";
defparam \address_from_device[0]~I .register_cascade_mode = "off";
defparam \address_from_device[0]~I .sum_lutc_input = "datac";
defparam \address_from_device[0]~I .lut_mask = "AAAA";
defparam \address_from_device[0]~I .output_mode = "reg_only";

maxv_lcell \payload_from_device[0]~I (
	.clk(CLK),
	.datab(UC_OUT[0]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[0] ));
defparam \payload_from_device[0]~I .operation_mode = "normal";
defparam \payload_from_device[0]~I .synch_mode = "off";
defparam \payload_from_device[0]~I .register_cascade_mode = "off";
defparam \payload_from_device[0]~I .sum_lutc_input = "datac";
defparam \payload_from_device[0]~I .lut_mask = "CCCC";
defparam \payload_from_device[0]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[5]~1_I (
	.dataa(\Selector8~1 ),
	.datab(\write_control_mux[0] ),
	.datac(\write_control_mux[1] ),
	.datad(\WRITE_BYTE[5]~0 ),
	.combout(\WRITE_BYTE[5]~1 ));
defparam \WRITE_BYTE[5]~1_I .operation_mode = "normal";
defparam \WRITE_BYTE[5]~1_I .synch_mode = "off";
defparam \WRITE_BYTE[5]~1_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[5]~1_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[5]~1_I .lut_mask = "F7D7";
defparam \WRITE_BYTE[5]~1_I .output_mode = "comb_only";

maxv_lcell \WRITE_BYTE[0]~reg0_I (
	.clk(CLK),
	.dataa(\write_control_mux[1] ),
	.datab(\address_from_device[0] ),
	.datac(\payload_from_device[0] ),
	.datad(\length_from_device[0] ),
	.aclr(__ALT_INV__RST_N),
	.sload(\WRITE_BYTE[5]~1 ),
	.regout(\WRITE_BYTE[0]~reg0 ));
defparam \WRITE_BYTE[0]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[0]~reg0_I .synch_mode = "on";
defparam \WRITE_BYTE[0]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[0]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[0]~reg0_I .lut_mask = "EE44";
defparam \WRITE_BYTE[0]~reg0_I .output_mode = "reg_only";

maxv_lcell \address_from_device[1]~I (
	.clk(CLK),
	.datac(UC_OUT[9]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\address_from_device[1] ));
defparam \address_from_device[1]~I .operation_mode = "normal";
defparam \address_from_device[1]~I .synch_mode = "off";
defparam \address_from_device[1]~I .register_cascade_mode = "off";
defparam \address_from_device[1]~I .sum_lutc_input = "datac";
defparam \address_from_device[1]~I .lut_mask = "F0F0";
defparam \address_from_device[1]~I .output_mode = "reg_only";

maxv_lcell \payload_from_device[1]~I (
	.clk(CLK),
	.datac(UC_OUT[1]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[1] ));
defparam \payload_from_device[1]~I .operation_mode = "normal";
defparam \payload_from_device[1]~I .synch_mode = "off";
defparam \payload_from_device[1]~I .register_cascade_mode = "off";
defparam \payload_from_device[1]~I .sum_lutc_input = "datac";
defparam \payload_from_device[1]~I .lut_mask = "F0F0";
defparam \payload_from_device[1]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[1]~reg0_I (
	.clk(CLK),
	.dataa(\write_control_mux[1] ),
	.datab(\address_from_device[1] ),
	.datac(\payload_from_device[1] ),
	.datad(\length_from_device[1] ),
	.aclr(__ALT_INV__RST_N),
	.sload(\WRITE_BYTE[5]~1 ),
	.regout(\WRITE_BYTE[1]~reg0 ));
defparam \WRITE_BYTE[1]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[1]~reg0_I .synch_mode = "on";
defparam \WRITE_BYTE[1]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[1]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[1]~reg0_I .lut_mask = "EE44";
defparam \WRITE_BYTE[1]~reg0_I .output_mode = "reg_only";

maxv_lcell \address_from_device[2]~I (
	.clk(CLK),
	.datab(UC_OUT[10]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\address_from_device[2] ));
defparam \address_from_device[2]~I .operation_mode = "normal";
defparam \address_from_device[2]~I .synch_mode = "off";
defparam \address_from_device[2]~I .register_cascade_mode = "off";
defparam \address_from_device[2]~I .sum_lutc_input = "datac";
defparam \address_from_device[2]~I .lut_mask = "CCCC";
defparam \address_from_device[2]~I .output_mode = "reg_only";

maxv_lcell \payload_from_device[2]~I (
	.clk(CLK),
	.datab(UC_OUT[2]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[2] ));
defparam \payload_from_device[2]~I .operation_mode = "normal";
defparam \payload_from_device[2]~I .synch_mode = "off";
defparam \payload_from_device[2]~I .register_cascade_mode = "off";
defparam \payload_from_device[2]~I .sum_lutc_input = "datac";
defparam \payload_from_device[2]~I .lut_mask = "CCCC";
defparam \payload_from_device[2]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[2]~reg0_I (
	.clk(CLK),
	.dataa(\write_control_mux[1] ),
	.datab(\address_from_device[2] ),
	.datac(\payload_from_device[2] ),
	.datad(\length_from_device[2] ),
	.aclr(__ALT_INV__RST_N),
	.sload(\WRITE_BYTE[5]~1 ),
	.regout(\WRITE_BYTE[2]~reg0 ));
defparam \WRITE_BYTE[2]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[2]~reg0_I .synch_mode = "on";
defparam \WRITE_BYTE[2]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[2]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[2]~reg0_I .lut_mask = "EE44";
defparam \WRITE_BYTE[2]~reg0_I .output_mode = "reg_only";

maxv_lcell \payload_from_device[3]~I (
	.clk(CLK),
	.dataa(UC_OUT[3]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[3] ));
defparam \payload_from_device[3]~I .operation_mode = "normal";
defparam \payload_from_device[3]~I .synch_mode = "off";
defparam \payload_from_device[3]~I .register_cascade_mode = "off";
defparam \payload_from_device[3]~I .sum_lutc_input = "datac";
defparam \payload_from_device[3]~I .lut_mask = "AAAA";
defparam \payload_from_device[3]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[3]~reg0_I (
	.clk(CLK),
	.dataa(\write_control_mux[1] ),
	.datab(\command_from_device[0] ),
	.datac(\payload_from_device[3] ),
	.datad(\length_from_device[3] ),
	.aclr(__ALT_INV__RST_N),
	.sload(\WRITE_BYTE[5]~1 ),
	.regout(\WRITE_BYTE[3]~reg0 ));
defparam \WRITE_BYTE[3]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[3]~reg0_I .synch_mode = "on";
defparam \WRITE_BYTE[3]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[3]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[3]~reg0_I .lut_mask = "EE44";
defparam \WRITE_BYTE[3]~reg0_I .output_mode = "reg_only";

maxv_lcell \payload_from_device[4]~I (
	.clk(CLK),
	.dataa(UC_OUT[4]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[4] ));
defparam \payload_from_device[4]~I .operation_mode = "normal";
defparam \payload_from_device[4]~I .synch_mode = "off";
defparam \payload_from_device[4]~I .register_cascade_mode = "off";
defparam \payload_from_device[4]~I .sum_lutc_input = "datac";
defparam \payload_from_device[4]~I .lut_mask = "AAAA";
defparam \payload_from_device[4]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[4]~reg0_I (
	.clk(CLK),
	.dataa(\write_control_mux[1] ),
	.datab(\length_from_device[4] ),
	.datac(\payload_from_device[4] ),
	.datad(\command_from_device[1] ),
	.aclr(__ALT_INV__RST_N),
	.sload(\WRITE_BYTE[5]~1 ),
	.regout(\WRITE_BYTE[4]~reg0 ));
defparam \WRITE_BYTE[4]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[4]~reg0_I .synch_mode = "on";
defparam \WRITE_BYTE[4]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[4]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[4]~reg0_I .lut_mask = "DD88";
defparam \WRITE_BYTE[4]~reg0_I .output_mode = "reg_only";

maxv_lcell \payload_from_device[5]~I (
	.clk(CLK),
	.dataa(UC_OUT[5]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[5] ));
defparam \payload_from_device[5]~I .operation_mode = "normal";
defparam \payload_from_device[5]~I .synch_mode = "off";
defparam \payload_from_device[5]~I .register_cascade_mode = "off";
defparam \payload_from_device[5]~I .sum_lutc_input = "datac";
defparam \payload_from_device[5]~I .lut_mask = "AAAA";
defparam \payload_from_device[5]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[5]~reg0_I (
	.clk(CLK),
	.dataa(\write_control_mux[1] ),
	.datab(\command_from_device[2] ),
	.datac(\payload_from_device[5] ),
	.datad(\length_from_device[5] ),
	.aclr(__ALT_INV__RST_N),
	.sload(\WRITE_BYTE[5]~1 ),
	.regout(\WRITE_BYTE[5]~reg0 ));
defparam \WRITE_BYTE[5]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[5]~reg0_I .synch_mode = "on";
defparam \WRITE_BYTE[5]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[5]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[5]~reg0_I .lut_mask = "EE44";
defparam \WRITE_BYTE[5]~reg0_I .output_mode = "reg_only";

maxv_lcell \payload_from_device[6]~I (
	.clk(CLK),
	.datab(UC_OUT[6]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[6] ));
defparam \payload_from_device[6]~I .operation_mode = "normal";
defparam \payload_from_device[6]~I .synch_mode = "off";
defparam \payload_from_device[6]~I .register_cascade_mode = "off";
defparam \payload_from_device[6]~I .sum_lutc_input = "datac";
defparam \payload_from_device[6]~I .lut_mask = "CCCC";
defparam \payload_from_device[6]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[6]~reg0_I (
	.clk(CLK),
	.dataa(\payload_from_device[6] ),
	.datab(\WRITE_BYTE[5]~1 ),
	.datac(\write_control_mux[1] ),
	.datad(\length_from_device[6] ),
	.aclr(__ALT_INV__RST_N),
	.regout(\WRITE_BYTE[6]~reg0 ));
defparam \WRITE_BYTE[6]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[6]~reg0_I .synch_mode = "off";
defparam \WRITE_BYTE[6]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[6]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[6]~reg0_I .lut_mask = "BB8B";
defparam \WRITE_BYTE[6]~reg0_I .output_mode = "reg_only";

maxv_lcell \payload_from_device[7]~I (
	.clk(CLK),
	.datab(UC_OUT[7]),
	.aclr(__ALT_INV__RST_N),
	.ena(\always0~0 ),
	.regout(\payload_from_device[7] ));
defparam \payload_from_device[7]~I .operation_mode = "normal";
defparam \payload_from_device[7]~I .synch_mode = "off";
defparam \payload_from_device[7]~I .register_cascade_mode = "off";
defparam \payload_from_device[7]~I .sum_lutc_input = "datac";
defparam \payload_from_device[7]~I .lut_mask = "CCCC";
defparam \payload_from_device[7]~I .output_mode = "reg_only";

maxv_lcell \WRITE_BYTE[7]~reg0_I (
	.clk(CLK),
	.dataa(\length_from_device[7] ),
	.datab(\payload_from_device[7] ),
	.datac(\write_control_mux[1] ),
	.datad(\WRITE_BYTE[5]~1 ),
	.aclr(__ALT_INV__RST_N),
	.regout(\WRITE_BYTE[7]~reg0 ));
defparam \WRITE_BYTE[7]~reg0_I .operation_mode = "normal";
defparam \WRITE_BYTE[7]~reg0_I .synch_mode = "off";
defparam \WRITE_BYTE[7]~reg0_I .register_cascade_mode = "off";
defparam \WRITE_BYTE[7]~reg0_I .sum_lutc_input = "datac";
defparam \WRITE_BYTE[7]~reg0_I .lut_mask = "CCAF";
defparam \WRITE_BYTE[7]~reg0_I .output_mode = "reg_only";

maxv_lcell \reset_uc_in_reg~I (
	.clk(CLK),
	.datab(\reset_uc_in_counter[1] ),
	.datac(reset_uc_in_reg),
	.datad(\state[3] ),
	.aclr(__ALT_INV__RST_N),
	.regout(reset_uc_in_reg));
defparam \reset_uc_in_reg~I .operation_mode = "normal";
defparam \reset_uc_in_reg~I .synch_mode = "off";
defparam \reset_uc_in_reg~I .register_cascade_mode = "off";
defparam \reset_uc_in_reg~I .sum_lutc_input = "datac";
defparam \reset_uc_in_reg~I .lut_mask = "3F30";
defparam \reset_uc_in_reg~I .output_mode = "reg_only";

maxv_lcell \reset_uc_in_counter[0]~I (
	.clk(CLK),
	.datac(\reset_uc_in_counter[0] ),
	.datad(\reset_uc_in_counter[1] ),
	.aclr(__ALT_INV__RST_N),
	.ena(reset_uc_in_reg),
	.regout(\reset_uc_in_counter[0] ));
defparam \reset_uc_in_counter[0]~I .operation_mode = "normal";
defparam \reset_uc_in_counter[0]~I .synch_mode = "off";
defparam \reset_uc_in_counter[0]~I .register_cascade_mode = "off";
defparam \reset_uc_in_counter[0]~I .sum_lutc_input = "datac";
defparam \reset_uc_in_counter[0]~I .lut_mask = "000F";
defparam \reset_uc_in_counter[0]~I .output_mode = "reg_only";

maxv_lcell \reset_uc_in_counter[1]~I (
	.clk(CLK),
	.datac(\reset_uc_in_counter[0] ),
	.datad(\reset_uc_in_counter[1] ),
	.aclr(__ALT_INV__RST_N),
	.ena(reset_uc_in_reg),
	.regout(\reset_uc_in_counter[1] ));
defparam \reset_uc_in_counter[1]~I .operation_mode = "normal";
defparam \reset_uc_in_counter[1]~I .synch_mode = "off";
defparam \reset_uc_in_counter[1]~I .register_cascade_mode = "off";
defparam \reset_uc_in_counter[1]~I .sum_lutc_input = "datac";
defparam \reset_uc_in_counter[1]~I .lut_mask = "00F0";
defparam \reset_uc_in_counter[1]~I .output_mode = "reg_only";

maxv_lcell \reset_uc_in~I (
	.clk(CLK),
	.dataa(reset_uc_in),
	.datab(\reset_uc_in_counter[1] ),
	.datac(reset_uc_in_reg),
	.datad(\state[3] ),
	.aclr(__ALT_INV__RST_N),
	.regout(reset_uc_in));
defparam \reset_uc_in~I .operation_mode = "normal";
defparam \reset_uc_in~I .synch_mode = "off";
defparam \reset_uc_in~I .register_cascade_mode = "off";
defparam \reset_uc_in~I .sum_lutc_input = "datac";
defparam \reset_uc_in~I .lut_mask = "2F2A";
defparam \reset_uc_in~I .output_mode = "reg_only";

maxv_lcell \uc_in_payload[0]~1_I (
	.datab(\state[3] ),
	.datad(\uc_in_payload[0]~0 ),
	.combout(\uc_in_payload[0]~1 ));
defparam \uc_in_payload[0]~1_I .operation_mode = "normal";
defparam \uc_in_payload[0]~1_I .synch_mode = "off";
defparam \uc_in_payload[0]~1_I .register_cascade_mode = "off";
defparam \uc_in_payload[0]~1_I .sum_lutc_input = "datac";
defparam \uc_in_payload[0]~1_I .lut_mask = "CC00";
defparam \uc_in_payload[0]~1_I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[0]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[0]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~0 ),
	.regout(\uc_in_payload[0] ));
defparam \uc_in_payload[0]~I .operation_mode = "normal";
defparam \uc_in_payload[0]~I .synch_mode = "on";
defparam \uc_in_payload[0]~I .register_cascade_mode = "off";
defparam \uc_in_payload[0]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[0]~I .lut_mask = "F000";
defparam \uc_in_payload[0]~I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[1]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[1]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~1 ),
	.regout(\uc_in_payload[1] ));
defparam \uc_in_payload[1]~I .operation_mode = "normal";
defparam \uc_in_payload[1]~I .synch_mode = "on";
defparam \uc_in_payload[1]~I .register_cascade_mode = "off";
defparam \uc_in_payload[1]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[1]~I .lut_mask = "F000";
defparam \uc_in_payload[1]~I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[2]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[2]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~2 ),
	.regout(\uc_in_payload[2] ));
defparam \uc_in_payload[2]~I .operation_mode = "normal";
defparam \uc_in_payload[2]~I .synch_mode = "on";
defparam \uc_in_payload[2]~I .register_cascade_mode = "off";
defparam \uc_in_payload[2]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[2]~I .lut_mask = "F000";
defparam \uc_in_payload[2]~I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[3]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[3]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~3 ),
	.regout(\uc_in_payload[3] ));
defparam \uc_in_payload[3]~I .operation_mode = "normal";
defparam \uc_in_payload[3]~I .synch_mode = "on";
defparam \uc_in_payload[3]~I .register_cascade_mode = "off";
defparam \uc_in_payload[3]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[3]~I .lut_mask = "F000";
defparam \uc_in_payload[3]~I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[4]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[4]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~4 ),
	.regout(\uc_in_payload[4] ));
defparam \uc_in_payload[4]~I .operation_mode = "normal";
defparam \uc_in_payload[4]~I .synch_mode = "on";
defparam \uc_in_payload[4]~I .register_cascade_mode = "off";
defparam \uc_in_payload[4]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[4]~I .lut_mask = "F000";
defparam \uc_in_payload[4]~I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[5]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[5]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~5 ),
	.regout(\uc_in_payload[5] ));
defparam \uc_in_payload[5]~I .operation_mode = "normal";
defparam \uc_in_payload[5]~I .synch_mode = "on";
defparam \uc_in_payload[5]~I .register_cascade_mode = "off";
defparam \uc_in_payload[5]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[5]~I .lut_mask = "F000";
defparam \uc_in_payload[5]~I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[6]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[6]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~6 ),
	.regout(\uc_in_payload[6] ));
defparam \uc_in_payload[6]~I .operation_mode = "normal";
defparam \uc_in_payload[6]~I .synch_mode = "on";
defparam \uc_in_payload[6]~I .register_cascade_mode = "off";
defparam \uc_in_payload[6]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[6]~I .lut_mask = "F000";
defparam \uc_in_payload[6]~I .output_mode = "comb_only";

maxv_lcell \uc_in_payload[7]~I (
	.clk(CLK),
	.datac(ENDPOINT_DECODE[7]),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_payload[0]~1 ),
	.combout(\UC_IN~7 ),
	.regout(\uc_in_payload[7] ));
defparam \uc_in_payload[7]~I .operation_mode = "normal";
defparam \uc_in_payload[7]~I .synch_mode = "on";
defparam \uc_in_payload[7]~I .register_cascade_mode = "off";
defparam \uc_in_payload[7]~I .sum_lutc_input = "qfbk";
defparam \uc_in_payload[7]~I .lut_mask = "F000";
defparam \uc_in_payload[7]~I .output_mode = "comb_only";

maxv_lcell \control_multiplexor[0]~I (
	.clk(CLK),
	.datab(ENDPOINT_DECODE[0]),
	.aclr(__ALT_INV__RST_N),
	.ena(\state[2] ),
	.regout(\control_multiplexor[0] ));
defparam \control_multiplexor[0]~I .operation_mode = "normal";
defparam \control_multiplexor[0]~I .synch_mode = "off";
defparam \control_multiplexor[0]~I .register_cascade_mode = "off";
defparam \control_multiplexor[0]~I .sum_lutc_input = "datac";
defparam \control_multiplexor[0]~I .lut_mask = "CCCC";
defparam \control_multiplexor[0]~I .output_mode = "reg_only";

maxv_lcell \uc_in_address[0]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\control_multiplexor[0] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_address[0]~0 ),
	.combout(\UC_IN~8 ),
	.regout(\uc_in_address[0] ));
defparam \uc_in_address[0]~I .operation_mode = "normal";
defparam \uc_in_address[0]~I .synch_mode = "on";
defparam \uc_in_address[0]~I .register_cascade_mode = "off";
defparam \uc_in_address[0]~I .sum_lutc_input = "qfbk";
defparam \uc_in_address[0]~I .lut_mask = "C0C0";
defparam \uc_in_address[0]~I .output_mode = "comb_only";

maxv_lcell \control_multiplexor[1]~I (
	.clk(CLK),
	.datab(ENDPOINT_DECODE[1]),
	.aclr(__ALT_INV__RST_N),
	.ena(\state[2] ),
	.regout(\control_multiplexor[1] ));
defparam \control_multiplexor[1]~I .operation_mode = "normal";
defparam \control_multiplexor[1]~I .synch_mode = "off";
defparam \control_multiplexor[1]~I .register_cascade_mode = "off";
defparam \control_multiplexor[1]~I .sum_lutc_input = "datac";
defparam \control_multiplexor[1]~I .lut_mask = "CCCC";
defparam \control_multiplexor[1]~I .output_mode = "reg_only";

maxv_lcell \uc_in_address[1]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\control_multiplexor[1] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_address[0]~0 ),
	.combout(\UC_IN~9 ),
	.regout(\uc_in_address[1] ));
defparam \uc_in_address[1]~I .operation_mode = "normal";
defparam \uc_in_address[1]~I .synch_mode = "on";
defparam \uc_in_address[1]~I .register_cascade_mode = "off";
defparam \uc_in_address[1]~I .sum_lutc_input = "qfbk";
defparam \uc_in_address[1]~I .lut_mask = "C0C0";
defparam \uc_in_address[1]~I .output_mode = "comb_only";

maxv_lcell \control_multiplexor[2]~I (
	.clk(CLK),
	.dataa(ENDPOINT_DECODE[2]),
	.aclr(__ALT_INV__RST_N),
	.ena(\state[2] ),
	.regout(\control_multiplexor[2] ));
defparam \control_multiplexor[2]~I .operation_mode = "normal";
defparam \control_multiplexor[2]~I .synch_mode = "off";
defparam \control_multiplexor[2]~I .register_cascade_mode = "off";
defparam \control_multiplexor[2]~I .sum_lutc_input = "datac";
defparam \control_multiplexor[2]~I .lut_mask = "AAAA";
defparam \control_multiplexor[2]~I .output_mode = "reg_only";

maxv_lcell \uc_in_address[2]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\control_multiplexor[2] ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_address[0]~0 ),
	.combout(\UC_IN~10 ),
	.regout(\uc_in_address[2] ));
defparam \uc_in_address[2]~I .operation_mode = "normal";
defparam \uc_in_address[2]~I .synch_mode = "on";
defparam \uc_in_address[2]~I .register_cascade_mode = "off";
defparam \uc_in_address[2]~I .sum_lutc_input = "qfbk";
defparam \uc_in_address[2]~I .lut_mask = "C0C0";
defparam \uc_in_address[2]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[0]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\uc_in_length~0 ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~11 ),
	.regout(\uc_in_length[0] ));
defparam \uc_in_length[0]~I .operation_mode = "normal";
defparam \uc_in_length[0]~I .synch_mode = "on";
defparam \uc_in_length[0]~I .register_cascade_mode = "off";
defparam \uc_in_length[0]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[0]~I .lut_mask = "C0C0";
defparam \uc_in_length[0]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[1]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\uc_in_length~2 ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~12 ),
	.regout(\uc_in_length[1] ));
defparam \uc_in_length[1]~I .operation_mode = "normal";
defparam \uc_in_length[1]~I .synch_mode = "on";
defparam \uc_in_length[1]~I .register_cascade_mode = "off";
defparam \uc_in_length[1]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[1]~I .lut_mask = "C0C0";
defparam \uc_in_length[1]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[2]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\uc_in_length~3 ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~13 ),
	.regout(\uc_in_length[2] ));
defparam \uc_in_length[2]~I .operation_mode = "normal";
defparam \uc_in_length[2]~I .synch_mode = "on";
defparam \uc_in_length[2]~I .register_cascade_mode = "off";
defparam \uc_in_length[2]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[2]~I .lut_mask = "C0C0";
defparam \uc_in_length[2]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[3]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\uc_in_length~4 ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~14 ),
	.regout(\uc_in_length[3] ));
defparam \uc_in_length[3]~I .operation_mode = "normal";
defparam \uc_in_length[3]~I .synch_mode = "on";
defparam \uc_in_length[3]~I .register_cascade_mode = "off";
defparam \uc_in_length[3]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[3]~I .lut_mask = "C0C0";
defparam \uc_in_length[3]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[4]~I (
	.clk(CLK),
	.datab(reset_uc_in),
	.datac(\uc_in_length~5 ),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~15 ),
	.regout(\uc_in_length[4] ));
defparam \uc_in_length[4]~I .operation_mode = "normal";
defparam \uc_in_length[4]~I .synch_mode = "on";
defparam \uc_in_length[4]~I .register_cascade_mode = "off";
defparam \uc_in_length[4]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[4]~I .lut_mask = "C0C0";
defparam \uc_in_length[4]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[5]~I (
	.clk(CLK),
	.datac(\uc_in_length~6 ),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~16 ),
	.regout(\uc_in_length[5] ));
defparam \uc_in_length[5]~I .operation_mode = "normal";
defparam \uc_in_length[5]~I .synch_mode = "on";
defparam \uc_in_length[5]~I .register_cascade_mode = "off";
defparam \uc_in_length[5]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[5]~I .lut_mask = "F000";
defparam \uc_in_length[5]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[6]~I (
	.clk(CLK),
	.datac(\uc_in_length~7 ),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~17 ),
	.regout(\uc_in_length[6] ));
defparam \uc_in_length[6]~I .operation_mode = "normal";
defparam \uc_in_length[6]~I .synch_mode = "on";
defparam \uc_in_length[6]~I .register_cascade_mode = "off";
defparam \uc_in_length[6]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[6]~I .lut_mask = "F000";
defparam \uc_in_length[6]~I .output_mode = "comb_only";

maxv_lcell \uc_in_length[7]~I (
	.clk(CLK),
	.datac(\uc_in_length~8 ),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_length[0]~1 ),
	.combout(\UC_IN~18 ),
	.regout(\uc_in_length[7] ));
defparam \uc_in_length[7]~I .operation_mode = "normal";
defparam \uc_in_length[7]~I .synch_mode = "on";
defparam \uc_in_length[7]~I .register_cascade_mode = "off";
defparam \uc_in_length[7]~I .sum_lutc_input = "qfbk";
defparam \uc_in_length[7]~I .lut_mask = "F000";
defparam \uc_in_length[7]~I .output_mode = "comb_only";

maxv_lcell \uc_in_command[0]~0_I (
	.dataa(\control_multiplexor[3] ),
	.datab(\control_multiplexor[4] ),
	.datac(\state[3] ),
	.datad(\control_multiplexor[5] ),
	.combout(\uc_in_command[0]~0 ));
defparam \uc_in_command[0]~0_I .operation_mode = "normal";
defparam \uc_in_command[0]~0_I .synch_mode = "off";
defparam \uc_in_command[0]~0_I .register_cascade_mode = "off";
defparam \uc_in_command[0]~0_I .sum_lutc_input = "datac";
defparam \uc_in_command[0]~0_I .lut_mask = "1060";
defparam \uc_in_command[0]~0_I .output_mode = "comb_only";

maxv_lcell \uc_in_command[0]~I (
	.clk(CLK),
	.datab(\control_multiplexor[4] ),
	.datad(\control_multiplexor[5] ),
	.aclr(__ALT_INV__RST_N),
	.ena(\uc_in_command[0]~0 ),
	.regout(\uc_in_command[0] ));
defparam \uc_in_command[0]~I .operation_mode = "normal";
defparam \uc_in_command[0]~I .synch_mode = "off";
defparam \uc_in_command[0]~I .register_cascade_mode = "off";
defparam \uc_in_command[0]~I .sum_lutc_input = "datac";
defparam \uc_in_command[0]~I .lut_mask = "0033";
defparam \uc_in_command[0]~I .output_mode = "reg_only";

maxv_lcell \UC_IN~19_I (
	.datab(reset_uc_in),
	.datad(\uc_in_command[0] ),
	.combout(\UC_IN~19 ));
defparam \UC_IN~19_I .operation_mode = "normal";
defparam \UC_IN~19_I .synch_mode = "off";
defparam \UC_IN~19_I .register_cascade_mode = "off";
defparam \UC_IN~19_I .sum_lutc_input = "datac";
defparam \UC_IN~19_I .lut_mask = "CC00";
defparam \UC_IN~19_I .output_mode = "comb_only";

maxv_lcell \uc_in_command[1]~I (
	.clk(CLK),
	.datab(\control_multiplexor[4] ),
	.datad(\control_multiplexor[5] ),
	.aclr(__ALT_INV__RST_N),
	.ena(\uc_in_command[0]~0 ),
	.regout(\uc_in_command[1] ));
defparam \uc_in_command[1]~I .operation_mode = "normal";
defparam \uc_in_command[1]~I .synch_mode = "off";
defparam \uc_in_command[1]~I .register_cascade_mode = "off";
defparam \uc_in_command[1]~I .sum_lutc_input = "datac";
defparam \uc_in_command[1]~I .lut_mask = "00CC";
defparam \uc_in_command[1]~I .output_mode = "reg_only";

maxv_lcell \UC_IN~20_I (
	.datab(reset_uc_in),
	.datad(\uc_in_command[1] ),
	.combout(\UC_IN~20 ));
defparam \UC_IN~20_I .operation_mode = "normal";
defparam \UC_IN~20_I .synch_mode = "off";
defparam \UC_IN~20_I .register_cascade_mode = "off";
defparam \UC_IN~20_I .sum_lutc_input = "datac";
defparam \UC_IN~20_I .lut_mask = "CC00";
defparam \UC_IN~20_I .output_mode = "comb_only";

maxv_lcell \uc_in_command[2]~I (
	.clk(CLK),
	.datac(\control_multiplexor[5] ),
	.datad(reset_uc_in),
	.aclr(__ALT_INV__RST_N),
	.sload(vcc),
	.ena(\uc_in_command[0]~0 ),
	.combout(\UC_IN~21 ),
	.regout(\uc_in_command[2] ));
defparam \uc_in_command[2]~I .operation_mode = "normal";
defparam \uc_in_command[2]~I .synch_mode = "on";
defparam \uc_in_command[2]~I .register_cascade_mode = "off";
defparam \uc_in_command[2]~I .sum_lutc_input = "qfbk";
defparam \uc_in_command[2]~I .lut_mask = "F000";
defparam \uc_in_command[2]~I .output_mode = "comb_only";

maxv_lcell \UC_IN~24_I (
	.dataa(reset_uc_in),
	.datab(\Equal6~1 ),
	.datac(\UC_IN~23 ),
	.datad(\state[3] ),
	.combout(\UC_IN~24 ));
defparam \UC_IN~24_I .operation_mode = "normal";
defparam \UC_IN~24_I .synch_mode = "off";
defparam \UC_IN~24_I .register_cascade_mode = "off";
defparam \UC_IN~24_I .sum_lutc_input = "datac";
defparam \UC_IN~24_I .lut_mask = "F2F0";
defparam \UC_IN~24_I .output_mode = "comb_only";

assign ENDPOINT_EN = \ENDPOINT_EN~0 ;

assign ENDPOINT_BUSY = \ENDPOINT_BUSY~0 ;

assign WRITE_EN = \WRITE_EN~reg0 ;

assign WRITE_BYTE[0] = \WRITE_BYTE[0]~reg0 ;

assign WRITE_BYTE[1] = \WRITE_BYTE[1]~reg0 ;

assign WRITE_BYTE[2] = \WRITE_BYTE[2]~reg0 ;

assign WRITE_BYTE[3] = \WRITE_BYTE[3]~reg0 ;

assign WRITE_BYTE[4] = \WRITE_BYTE[4]~reg0 ;

assign WRITE_BYTE[5] = \WRITE_BYTE[5]~reg0 ;

assign WRITE_BYTE[6] = \WRITE_BYTE[6]~reg0 ;

assign WRITE_BYTE[7] = \WRITE_BYTE[7]~reg0 ;

assign UC_IN[0] = \UC_IN~0 ;

assign UC_IN[1] = \UC_IN~1 ;

assign UC_IN[2] = \UC_IN~2 ;

assign UC_IN[3] = \UC_IN~3 ;

assign UC_IN[4] = \UC_IN~4 ;

assign UC_IN[5] = \UC_IN~5 ;

assign UC_IN[6] = \UC_IN~6 ;

assign UC_IN[7] = \UC_IN~7 ;

assign UC_IN[8] = \UC_IN~8 ;

assign UC_IN[9] = \UC_IN~9 ;

assign UC_IN[10] = \UC_IN~10 ;

assign UC_IN[11] = \UC_IN~11 ;

assign UC_IN[12] = \UC_IN~12 ;

assign UC_IN[13] = \UC_IN~13 ;

assign UC_IN[14] = \UC_IN~14 ;

assign UC_IN[15] = \UC_IN~15 ;

assign UC_IN[16] = \UC_IN~16 ;

assign UC_IN[17] = \UC_IN~17 ;

assign UC_IN[18] = \UC_IN~18 ;

assign UC_IN[19] = \UC_IN~19 ;

assign UC_IN[20] = \UC_IN~20 ;

assign UC_IN[21] = \UC_IN~21 ;

assign UC_IN[22] = \UC_IN~24 ;

assign UC_IN[23] = transfer_busy;

endmodule
